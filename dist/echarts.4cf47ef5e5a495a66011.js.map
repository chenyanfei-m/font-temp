{"version":3,"sources":["webpack:///echarts.4cf47ef5e5a495a66011.js","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./~/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./~/echarts/lib/component/dataZoom/helper.js","webpack:///./~/echarts/lib/component/gridSimple.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/zrender/lib/graphic/helper/image.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/echarts/lib/component/axisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/echarts/lib/component/helper/sliderMove.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/processor/dataFilter.js","webpack:///./~/echarts/lib/scale/helper.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/echarts/lib/visual/dataColor.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/helper/text.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/action/createDataSelectAction.js","webpack:///./~/echarts/lib/chart/bar/BarSeries.js","webpack:///./~/echarts/lib/chart/bar/BarView.js","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js","webpack:///./~/echarts/lib/chart/bar/helper.js","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/echarts/lib/chart/helper/labelHelper.js","webpack:///./~/echarts/lib/chart/line/LineSeries.js","webpack:///./~/echarts/lib/chart/line/LineView.js","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/echarts/lib/chart/line/poly.js","webpack:///./~/echarts/lib/chart/pie/PieSeries.js","webpack:///./~/echarts/lib/chart/pie/PieView.js","webpack:///./~/echarts/lib/chart/pie/labelLayout.js","webpack:///./~/echarts/lib/chart/pie/pieLayout.js","webpack:///./~/echarts/lib/chart/radar/RadarSeries.js","webpack:///./~/echarts/lib/chart/radar/RadarView.js","webpack:///./~/echarts/lib/chart/radar/backwardCompat.js","webpack:///./~/echarts/lib/chart/radar/radarLayout.js","webpack:///./~/echarts/lib/component/axis.js","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./~/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./~/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./~/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./~/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./~/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./~/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./~/echarts/lib/component/dataZoom/roams.js","webpack:///./~/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./~/echarts/lib/component/helper/RoamController.js","webpack:///./~/echarts/lib/component/helper/interactionMutex.js","webpack:///./~/echarts/lib/component/helper/listComponent.js","webpack:///./~/echarts/lib/component/helper/selectableMixin.js","webpack:///./~/echarts/lib/component/legend/LegendModel.js","webpack:///./~/echarts/lib/component/legend/LegendView.js","webpack:///./~/echarts/lib/component/legend/legendAction.js","webpack:///./~/echarts/lib/component/legend/legendFilter.js","webpack:///./~/echarts/lib/component/radar.js","webpack:///./~/echarts/lib/component/radar/RadarView.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./~/echarts/lib/coord/radar/Radar.js","webpack:///./~/echarts/lib/coord/radar/RadarModel.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/helper.js","webpack:///./~/echarts/lib/layout/barGrid.js","webpack:///./~/echarts/lib/layout/points.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/processor/dataSample.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/zrender.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/echarts/lib/chart/bar.js","webpack:///./~/echarts/lib/chart/line.js","webpack:///./~/echarts/lib/chart/pie.js","webpack:///./~/echarts/lib/chart/radar.js","webpack:///./~/echarts/lib/component/dataZoom.js","webpack:///./~/echarts/lib/component/grid.js","webpack:///./~/echarts/lib/component/legend.js","webpack:///./~/echarts/lib/component/title.js","webpack:///./~/echarts/lib/component/tooltip.js"],"names":["webpackJsonp","1626","module","exports","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","get","prefixedKey","removeKey","noop","1627","__webpack_require__","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","style","fill","hoverStyle","__hoverStl","normalStyle","name","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","setStyle","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyleCommon","textStyle","textStyleModel","opt","isEmphasis","EMPTY_OBJ","isRectText","textPosition","getShallow","textOffset","labelRotate","Math","PI","textRotation","textDistance","zrUtil","richResult","ecModel","globalTextStyle","option","richItemNames","getRichItemNames","richTextStyle","getModel","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","pathTool","Path","matrix","vector","Transformable","BoundingRect","round","mathMax","max","mathMin","min","graphic","Group","Image","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","opts","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","aspect","width","height","cx","x","cy","y","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","on","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","labelFetcher","labelDataIndex","labelDimIndex","showNormal","showEmphasis","baseText","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","specifiedTextStyle","host","setText","labelModel","defaultColor","getFont","gTextStyleModel","join","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","image","replace","1628","_trim","str","quantityExponent","floor","log","LN10","number","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","a","b","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","idx","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","TIME_REG","parseDate","Date","exec","hour","toUpperCase","UTC","quantity","nice","nf","exponent","exp10","f","reformIntervals","list","littleThan","lg","interval","close","curr","Infinity","currClose","splice","isNumeric","v","1629","has","formatUtil","nubmerUtil","Model","modelUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","model","dataFormatMixin","seriesIndex","mainType","subType","getData","getDataParams","dataType","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","getItemVisual","componentType","componentSubType","seriesType","seriesId","id","seriesName","marker","getTooltipMarker","$vars","status","dimIndex","labelProp","itemModel","getItemModel","params","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","index","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","item","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","payload","dataIndexInside","indexOfRawIndex","indexOfName","makeGetter","hostObj","parseFinder","finder","defaultMainType","parsedKey","queryType","toLowerCase","includeMainTypes","queryParam","models","queryComponents","dataDimToCoordDim","dataDim","dimensions","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","1630","ArrayCtor","Float32Array","create","out","copy","add","v1","v2","scaleAndAdd","sub","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","1631","numberUtil","textContain","addCommas","split","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","getTextRect","1632","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","init","1633","doGet","pathArr","getParent","getParentMethod","clazzUtil","env","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","restoreData","setReadOnly","properties","customizeGetParent","node","animation","enableClassExtend","1634","navigator","browser","os","canvasSupported","ua","firefox","ie","edge","weChat","test","version","touchEventsSupported","window","pointerEventsSupported","userAgent","1635","getDependencies","deps","ComponentModel","getClassesByMainType","Clazz","arrayPush","dependencies","parseClassType","main","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","hasOwn","optList","Class","getReferringComponents","enableClassManagement","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","1636","checkClassType","superCall","methodName","superApply","IS_CONTAINER","ret","RootClass","mandatoryMethods","proto","__DEV__","method","console","warn","ExtendedClass","entity","options","makeContainer","container","storage","registerClass","getClass","componentMainType","throwWhenNotFound","o","hasClass","getAllClassMainTypes","types","hasSubTypes","originalExtend","1637","boxLayout","orient","group","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","left","top","right","bottom","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","1638","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","1639","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","1640","getTextWidth","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","getWidth","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","1641","getBoundingClientRect","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","event","eventType","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","MOUSE_EVENT_REG","addEventListener","handler","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Eventful","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","1642","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","1643","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","1644","arrySlice","_$handlers","one","_h","isSilent","off","newList","trigger","argLen","triggerWithContext","1645","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","parse","cached","kCSSColorTable","op","ep","fname","alpha","pop","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","colorArr","stringify","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1646","CoordinateSystemManager","_coordinateSystems","coordinateSystemCreators","api","coordinateSystems","creater","update","coordSys","getCoordinateSystems","register","coordinateSystemCreator","1647","collectAxesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","eachSeries","seriesModel","coordinateSystem","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","helper","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","1648","global","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","List","hostModel","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","stackedOn","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","initData","nameList","dimValueGetter","isDataArray","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","self","stack","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","getVisual","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","1649","completeDimensions","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dimsDef","encodeDef","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","tooltipName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","tooltip","1650","classUtil","colorPaletteMixin","SeriesModel","legendDataProvider","visualColorAccessPath","getInitialData","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","setData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipDims","colorStops","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","1651","excludes","includes","1652","roundNumber","_interval","_intervalPrecision","start","end","thisExtent","unionExtent","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","1653","setting","_setting","scaleProto","getSetting","unionExtentFromData","_isBlank","1654","Triangle","moveTo","lineTo","closePath","Diamond","Pin","angle","asin","tanX","tanY","arc","cpLen","cpLen2","bezierCurveTo","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","Symbol","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","symbolPath","setColor","1655","lib","ORIGIN_METHOD","RATE","throttle","fn","delay","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","clear","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","1656","dpr","devicePixelRatio","config","debugMode","1657","Element","_children","__storage","silent","children","childOfName","childCount","_doAdd","addBefore","nextSibling","remove","zr","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","ignore","invisible","childRect","1658","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","toStatic","lineDashSum","offset","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","1659","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creator","creators","registeredCoordSys","CoordinateSystem","completeDimOpt","getDimensionsInfo","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","1660","makeAxisEventDataBase","eventData","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","getLineStyle","buildAxisLabel","axisLabelShow","labelMargin","labelRotation","innerTextLayout","labelDirection","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","dataToCoord","pos","labelOffset","labelStr","textEl","targetType","_dumbGroup","updateTransform","decomposeTransform","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","axisRotation","rawTick","1661","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","echarts","AxisProxy","eachAxisDim","DataZoomModel","extendComponentModel","zlevel","z","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","thisOption","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","callback","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","1662","ComponentView","render","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","getCoordSysModel","1663","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","1664","extendComponentView","gridModel","getRect","getItemStyle","registerPreprocessor","xAxis","yAxis","grid","1665","fixExtentWithBands","nTick","normalizedExtent","Axis","onBand","_labelInterval","coord","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","getLabelInterval","isHorizontal","1666","origin","rangeStart","rangeEnd","setRange","resetRange","1667","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","1668","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","dispose","chartProto","updateView","updateLayout","updateVisual","1669","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","1670","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","progressive","afterBrush","rectContain","animateStyle","useStyle","1671","Gradient","addColorStop","1672","imageOnLoad","cachedImgObj","__cachedImgObj","onload","pending","pendingWrap","cbPayload","hostEl","globalImageCache","newImageOrSrc","createOrUpdateImage","__zrImageSrc","src","1673","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","labelHelper","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","elStyle","opacity","valueDim","findLabelValueDim","onEmphasis","ratio","onNormal","fadeOut","1674","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","1675","rawAxisPosition","axisPosition","onZero","axisDim","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","1676","axisTrigger","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","registerAction","1677","getCartesian","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","elOption","axisPointerType","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","layoutInfo","buildCartesianSingleLabelElOption","getHandleTransform","getTransformedPosition","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","verticalAlign","align","tooltipOption","targetShape","makeLineShape","shadow","bandWidth","makeRectShape","1678","getSeriesByIndex","dataToPoint","1679","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","globalListener","getZr","unregister","1680","confineInContainer","viewWidth","viewHeight","getHeight","styleModel","getAreaStyle","buildLabelElOption","labelPos","getValueLabel","paddings","textRect","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","series","dataParams","textLayout","xDimIndex","xy","wh","makeSectorShape","r0","clockwise","1681","getSpanSign","handleEnds","handleIndex","sign","restrict","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","1682","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","areaStyle","categoryAxis","valueAxis","timeAxis","logAxis","logBase","1683","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","1684","isAxisUsedInTheGrid","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","resize","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axesMapOnDim","coordList","getCartesians","convertToPixel","_findConvertTarget","cartesian","convertFromPixel","coordsList","containPoint","createAxisCreator","axisPositionUsed","axesCount","eachComponent","addAxis","baseAxis","grids","1685","clearColorPalette","colorIdx","colorNameMap","colorPalette","1686","legendModels","findComponents","eachSeriesByType","isSelected","1687","fixExtent","1688","Component","componentModel","componentProto","1689","paletteScope","eachRawSeriesByType","dataAll","idxMap","isSeriesFiltered","filteredIdx","singleDataColor","1690","defaultSymbolType","legendSymbol","symbol","itemSymbolType","itemSymbolSize","1691","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","1692","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","1693","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1694","PI2","normalizeRadian","1695","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1696","idStart","1697","1698","ZImage","_image","sWidth","sHeight","drawImage","1699","repeat","createPattern","1700","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","transformText","textOrigin","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","1701","shadowTemp","orignalBrush","modified","clipPaths","1702","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp1","cp2","1703","r1","r2","r3","r4","total","1704","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","renderRichText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","center","middle","normalizeTextStyle","renderText","needDrawText","1705","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","1717","ExtensionAPI","chartInstance","echartsAPIList","1718","actionInfos","actionInfo","selected","query","1719","brushSelector","1720","removeRect","animationModel","removeSector","updateStyle","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","extendChartView","coordinateSystemType","_render","isHorizontalOrRadial","oldData","_data","elementCreator","newIndex","oldIndex","execute","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","1721","getMarkerPosition","pt","legendHoverLink","barMinHeight","barMinAngle","1722","getBorderLineDash","1723","fixPosition","1724","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","enableAnimation","1725","labelDims","1726","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","1727","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","dir","getStackedOnPoints","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","ChartView","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","1728","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","1729","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","fixClipWithShadow","stackedOnBBox","1730","dataSelectableMixin","PieSeries","extendSeriesModel","updateSelectedMap","_defaultLabelLine","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","borderWidth","animationType","1731","updateDataSelected","toggleItemSelected","midAngle","PiePiece","hoverIgnore","normalIgnore","piePieceProto","firstCreate","_updateLabel","labelText","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","Pie","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","selectedMode","piePiece","_createClipPath","itemLayout","1732","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside","1733","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","1734","RadarSeries","indicatorAxes","getIndicatorAxes","radarIndex","1735","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","itemGroup","hoverPolygonIgnore","polygonIgnore","hoverAreaStyleModel","itemHoverStyle","1736","polarOptArr","polarNotRadar","polarOpt","indicator","radar","seriesOpt","polarIndex","1737","pointsConverter","1738","1739","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","1740","AxisPointerModel","triggerOn","shadowStyle","backgroundColor","borderColor","handle","icon","1741","AxisPonterView","disopse","_model","1742","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_api","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","1743","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","escapeConnect","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","batch","1744","calculateDataExtent","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","setMinMaxSpan","minMaxSpan","_minMaxSpan","_dataZoomModel","minMax","valueSpan","_dataExtent","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","getMinMaxSpan","calculateDataWindow","percentExtent","boundValue","boundPercent","reset","dataWindow","restore","filterData","isInWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","1745","disabled","zoomLock","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","1746","DataZoomView","sliderMove","roams","InsideZoomView","_range","shouldRecordRange","coordInfoList","allCoordIds","coordInfo","generateCoordId","dataZoomOption","coordId","containsPoint","dataZoomId","throttleRate","panGetRange","_onPan","zoomGetRange","_onZoom","roamControllerOpt","controller","oldX","oldY","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","mouseX","mouseY","percentPoint","pixelStart","oldPoint","newPoint","pointToCoord","1747","SliderZoomModel","dataBackground","fillerColor","handleIcon","handleStyle","labelPrecision","showDetail","showDataShadow","1748","getOtherDim","thisDim","getCursor","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_buildView","_updateView","thisGroup","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","layoutParams","layoutRect","location","targetAxisModel","otherAxisInverse","_getViewExtent","onclick","_onClickPanelClick","info","_prepareDataShadowInfo","getShadowDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","thisAxis","displaybles","handles","handleLabels","filler","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","handleColor","viewExtent","_updateInterval","viewExtend","nonRealtime","handleInterval","handleHeight","_updateDataInfo","barTransform","textPoint","orderedHandleEnds","labelTexts","dataInterval","_formatLabel","valueStr","showOrHide","_dispatchZoomAction","localPoint","1749","linkedNodesFinder","effectedModels","1750","resetSingleAxis","filterSingleAxis","percentRange","valueRange","1751","giveStore","ATTR","createController","newRecord","RoamController","onPan","onZoom","cleanStore","wrapAndDispatch","getRange","dataZoomInfos","mergeControllerParams","controlType","typePriority","true","move","false","dataZoomInfo","oneType","theDataZoomId","theCoordId","controllerParams","enable","setPointerChecker","1752","1753","pointerChecker","_zr","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","disable","isDragging","isPinching","_pinching","_x","_y","checkKeyBinding","gestureEvent","interactionMutex","isTaken","zoomDelta","zoom","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","1754","getStore","take","resourceKey","userKey","release","1755","boxLayoutParams","viewportSize","makeBackground","1756","targetList","_targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","1757","LegendModel","_updateData","legendData","hasSelected","availableNames","getSeries","_availableNames","borderRadius","itemGap","itemWidth","itemHeight","inactiveColor","1758","dispatchSelectAction","dispatchHighlightAction","dataName","getDisplayList","dispatchDownplayAction","symbolCreator","listComponentHelper","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","mainRect","layoutInner","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","1759","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","1760","filterSeries","1761","1762","radarModel","_buildAxes","_buildSplitLineAndArea","axisBuilders","indicatorAxis","getColorIndex","areaOrLine","areaOrLineColorList","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLines","splitAreas","ticksRadius","realSplitNumber","axesTicksPoints","coordToPoint","prevPoints","error","1763","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","clientWidth","clientHeight","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","isShow","1764","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","animationEasingUpdate","1765","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","dataModel","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","1766","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","1767","coordExtent","1768","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","output","1769","axisX","axisY","1770","containLabel","1771","IndicatorAxis","1772","Radar","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","increaseInterval","radarSeries","rawExtent","fixedMin","fixedMax","nicedSplitNumber","halfSplitNumber","radarList","1773","defaultsShow","valueAxisDefault","axisModelCommonMixin","RadarModel","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","1774","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","1775","createList","createScale","mixinAxisModelCommonMethods","1776","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barLayoutGrid","barWidthAndOffset","getSeriesByType","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","coordDims","lastCoord","lastCoordOrigin","1777","1778","maskColor","mask","labelRect","1779","mergeTheme","theme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_componentsMap","_seriesIndices","_theme","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","assertSeriesInitialized","GlobalModel","optionManager","_optionManager","setOption","optionPreprocessorFuncs","resetOption","optionChanged","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","getOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","component","queryResult","oneSeries","rawSeriesIndex","getCurrentSeriesIndices","filteredSeries","componentTypes","1780","OptionManager","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1781","platform","blendMode","animationDuration","progressiveThreshold","useUTC","1782","1783","1784","lineType","1785","getLineDash","dotSize","dashSize","1786","graphicUtil","PATH_COLOR","1787","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","isTheme","clockWise","pointerColor","dataRange","visualMap","componentName","1788","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radarOpt","geoOpt","regions","regionObj","1789","samplers","average","nearest","indexSampler","sampler","1790","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","1791","rank","1792","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","1793","encodeColor","colorAccessPath","1803","makeEventPacket","eveType","targetInfo","topTarget","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventName","eventArgs","setCursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1804","returnFalse","createDom","newDom","newDomStyle","setAttribute","Layer","dom","onselectstart","domBack","ctxBack","clearColor","motionBlur","lastFrameAlpha","elCount","initContext","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","1805","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","timsort","Painter","root","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getType","isSingleCanvas","getViewportRoot","viewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","configLayer","layerConfig","delLayer","removeChild","clearLayer","getRenderedCanvas","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","pixelRatio","displayList","whIdx","cwh","plt","prb","pathToImage","canvas","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","1806","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","1807","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","1808","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","1809","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1810","_l","1811","1812","_a","_b","1813","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","1814","1815","1816","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","track","pinchEnd","pinchPre","pinchCenter","1817","extremity","fromPoints","xDim","yDim","tx","ty","1818","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","1819","paths","_updatePathDirty","1820","globalCoord","1821","1822","textHelper","1823","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","shift","1824","interpolate","segs","w2","w3","1825","1826","unitX","unitY","1827","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","1828","1829","1830","1831","1832","1833","1834","1835","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","1836","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","1837","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","1838","nPoint","mathAtan2","1839","delInstance","instances","HandlerProxy","useVML","painterCtors","zrender","ZRender","getInstance","registerPainter","rendererType","renderer","vml","handerProxy","flush","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","refreshImmediately","_needsRefreshHover","refreshHoverImmediately","clearAnimation","499","createRegisterEventWithLowercaseName","MessageCenter","ECharts","prioritySortFunc","prio","themeStorage","_dom","_throttledZrFlush","backwardCompat","_chartsViews","_chartsMap","_componentsViews","_coordSysMgr","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","coordSysList","updateDirectly","ecIns","callView","view","__alive","__model","__viewId","doDispatchAction","payloadType","actionWrap","actions","cptType","updateMethod","IN_MAIN_PROCESS","payloads","batched","eventObj","eventObjBatch","isHighDown","action","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","updateZ","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","__id","__ecComponentInfo","processData","process","stackSeriesData","stackedDataMap","previousStack","doLayout","isLayout","doVisualEncoding","excludesLayout","doRender","componentView","chartView","frameDrawNum","needProgressive","ecInstance","coordSysMgr","getComponentByElement","modelInfo","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","otherChart","ACTION_REG","echartsProto","notMerge","lazyUpdate","setTheme","getDevicePixelRatio","getDataURL","excludeComponents","excludesComponentViews","url","toDataURL","getConnectedDataURL","groupId","canvasList","targetCanvas","img","containPixel","visualType","getViewOfComponentModel","getViewOfSeriesModel","background","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","MOUSE_EVENT_NAMES","eveName","isDisposed","_disposed","idBase","groupIdBase","existInstance","getInstanceByDom","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","preprocessorFunc","priority","processorFunc","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","setCanvasCreator","format","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","501","502","503","504","505","506","507","508","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","open","groupRect","layoutOption","alignStyle","509"],"mappings":"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","file":"echarts.4cf47ef5e5a495a66011.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 1626:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n\n/***/ 1627:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var pathTool = __webpack_require__(1837);\n    var Path = __webpack_require__(1632);\n    var colorTool = __webpack_require__(1645);\n    var matrix = __webpack_require__(1643);\n    var vector = __webpack_require__(1630);\n    var Transformable = __webpack_require__(1705);\n    var BoundingRect = __webpack_require__(1638);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(1657);\n\n    graphic.Image = __webpack_require__(1698);\n\n    graphic.Text = __webpack_require__(1822);\n\n    graphic.Circle = __webpack_require__(1828);\n\n    graphic.Sector = __webpack_require__(1834);\n\n    graphic.Ring = __webpack_require__(1833);\n\n    graphic.Polygon = __webpack_require__(1830);\n\n    graphic.Polyline = __webpack_require__(1831);\n\n    graphic.Rect = __webpack_require__(1832);\n\n    graphic.Line = __webpack_require__(1829);\n\n    graphic.BezierCurve = __webpack_require__(1827);\n\n    graphic.Arc = __webpack_require__(1826);\n\n    graphic.CompoundPath = __webpack_require__(1819);\n\n    graphic.LinearGradient = __webpack_require__(1820);\n\n    graphic.RadialGradient = __webpack_require__(1821);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textStrokeWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textStrokeWidth: textStyle.textStrokeWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textStrokeWidth = insideRollback.textStrokeWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n\n/***/ 1628:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * Consider DST, it is incorrect to provide a method `getTimezoneOffset`\n     * without time specified. So this method is removed.\n     *\n     * @return {number} in minutes\n     */\n    // number.getTimezoneOffset = function () {\n    //     return (new Date()).getTimezoneOffset();\n    // };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            // Use local time when no timezone offset specifed.\n            if (!match[8]) {\n                // match[n] can only be string or undefined.\n                // But take care of '12' + 1 => '121'.\n                return new Date(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    +match[4] || 0,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                );\n            }\n            // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n            // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n            // For example, system timezone is set as \"Time Zone: America/Toronto\",\n            // then these code will get different result:\n            // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n            // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n            // So we should not use `new Date`, but use `Date.UTC`.\n            else {\n                var hour = +match[4] || 0;\n                if (match[8].toUpperCase() !== 'Z') {\n                    hour -= match[8].slice(0, 3);\n                }\n                return new Date(Date.UTC(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    hour,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                ));\n            }\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n\n/***/ 1629:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(1631);\n    var nubmerUtil = __webpack_require__(1628);\n    var Model = __webpack_require__(1633);\n    var zrUtil = __webpack_require__(1626);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n\n/***/ 1630:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n\n/***/ 1631:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var numberUtil = __webpack_require__(1628);\n    var textContain = __webpack_require__(1640);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n\n/***/ 1632:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(1670);\n    var zrUtil = __webpack_require__(1626);\n    var PathProxy = __webpack_require__(1658);\n    var pathContain = __webpack_require__(1813);\n\n    var Pattern = __webpack_require__(1699);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n\n/***/ 1633:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n    var clazzUtil = __webpack_require__(1636);\n    var env = __webpack_require__(1634);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(1785));\n    mixin(Model, __webpack_require__(1782));\n    mixin(Model, __webpack_require__(1786));\n    mixin(Model, __webpack_require__(1784));\n\n    module.exports = Model;\n\n\n/***/ }),\n\n/***/ 1634:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n\n/***/ 1635:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(1633);\n    var zrUtil = __webpack_require__(1626);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(1667);\n    var clazzUtil = __webpack_require__(1636);\n    var layout = __webpack_require__(1637);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(1783));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n\n/***/ 1636:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n\n/***/ 1637:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(1626);\n    var BoundingRect = __webpack_require__(1638);\n    var numberUtil = __webpack_require__(1628);\n    var formatUtil = __webpack_require__(1631);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n\n/***/ 1638:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(1630);\n    var matrix = __webpack_require__(1643);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n\n/***/ 1639:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(1791);\n    var IntervalScale = __webpack_require__(1652);\n    __webpack_require__(1792);\n    __webpack_require__(1790);\n    var Scale = __webpack_require__(1653);\n\n    var numberUtil = __webpack_require__(1628);\n    var zrUtil = __webpack_require__(1626);\n    var textContain = __webpack_require__(1640);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n\n/***/ 1640:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var util = __webpack_require__(1626);\n    var BoundingRect = __webpack_require__(1638);\n    var imageHelper = __webpack_require__(1672);\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n\n/***/ 1641:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(1644);\n    var env = __webpack_require__(1634);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    var MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n        // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n        // If e.which has been defined, if may be readonly,\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n        var button = e.button;\n        if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n            e.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    function notLeftMouse(e) {\n        // If e.which is undefined, considered as left mouse event.\n        return e.which > 1;\n    }\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n        notLeftMouse: notLeftMouse,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n\n/***/ 1642:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(1630);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n\n/***/ 1643:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n\n/***/ 1644:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n\n/***/ 1645:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(1695);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerpNumber(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than lerp methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastLerp(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function lerp(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastLerp: fastLerp,\n        fastMapToColor: fastLerp, // Deprecated\n        lerp: lerp,\n        mapToColor: lerp, // Deprecated\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n\n/***/ 1646:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n\n/***/ 1647:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var Model = __webpack_require__(1633);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1648:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(1633);\n    var DataDiffer = __webpack_require__(1774);\n\n    var zrUtil = __webpack_require__(1626);\n    var modelUtil = __webpack_require__(1629);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(207)))\n\n/***/ }),\n\n/***/ 1649:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n    var modelUtil = __webpack_require__(1629);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n\n/***/ 1650:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var formatUtil = __webpack_require__(1631);\n    var classUtil = __webpack_require__(1636);\n    var modelUtil = __webpack_require__(1629);\n    var ComponentModel = __webpack_require__(1635);\n    var colorPaletteMixin = __webpack_require__(1685);\n    var env = __webpack_require__(1634);\n    var layout = __webpack_require__(1637);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n\n/***/ 1651:\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(1626);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n\n/***/ 1652:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(1628);\n    var formatUtil = __webpack_require__(1631);\n    var Scale = __webpack_require__(1653);\n    var helper = __webpack_require__(1687);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n\n/***/ 1653:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(1636);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n\n/***/ 1654:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(1627);\n    var BoundingRect = __webpack_require__(1638);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n\n/***/ 1655:\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n\n/***/ 1656:\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n\n/***/ 1657:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n    var Element = __webpack_require__(1691);\n    var BoundingRect = __webpack_require__(1638);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n\n/***/ 1658:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(1642);\n    var vec2 = __webpack_require__(1630);\n    var bbox = __webpack_require__(1817);\n    var BoundingRect = __webpack_require__(1638);\n    var dpr = __webpack_require__(1656).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n\n/***/ 1659:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(1648);\n    var completeDimensions = __webpack_require__(1649);\n    var zrUtil = __webpack_require__(1626);\n    var modelUtil = __webpack_require__(1629);\n    var CoordinateSystem = __webpack_require__(1646);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n\n/***/ 1660:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var formatUtil = __webpack_require__(1631);\n    var graphic = __webpack_require__(1627);\n    var Model = __webpack_require__(1633);\n    var numberUtil = __webpack_require__(1628);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(1630);\n    var matrix = __webpack_require__(1643);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTickLabel: function () {\n            var axisModel = this.axisModel;\n            var opt = this.opt;\n\n            var tickEls = buildAxisTick(this, axisModel, opt);\n            var labelEls = buildAxisLabel(this, axisModel, opt);\n\n            fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (isNameLocationCenter(nameLocation)) {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        // FIXME\n        // Have not consider onBand yet, where tick els is more than label els.\n\n        labelEls = labelEls || [];\n        tickEls = tickEls || [];\n\n        var firstLabel = labelEls[0];\n        var nextLabel = labelEls[1];\n        var lastLabel = labelEls[labelEls.length - 1];\n        var prevLabel = labelEls[labelEls.length - 2];\n\n        var firstTick = tickEls[0];\n        var nextTick = tickEls[1];\n        var lastTick = tickEls[tickEls.length - 1];\n        var prevTick = tickEls[tickEls.length - 2];\n\n        if (showMinLabel === false) {\n            ignoreEl(firstLabel);\n            ignoreEl(firstTick);\n        }\n        else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            if (showMinLabel) {\n                ignoreEl(nextLabel);\n                ignoreEl(nextTick);\n            }\n            else {\n                ignoreEl(firstLabel);\n                ignoreEl(firstTick);\n            }\n        }\n\n        if (showMaxLabel === false) {\n            ignoreEl(lastLabel);\n            ignoreEl(lastTick);\n        }\n        else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            if (showMaxLabel) {\n                ignoreEl(prevLabel);\n                ignoreEl(prevTick);\n            }\n            else {\n                ignoreEl(lastLabel);\n                ignoreEl(lastTick);\n            }\n        }\n    }\n\n    function ignoreEl(el) {\n        el && (el.ignore = true);\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n    function isNameLocationCenter(nameLocation) {\n        return nameLocation === 'middle' || nameLocation === 'center';\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (\n        axis,\n        i,\n        interval,\n        ticksCnt,\n        showMinLabel,\n        showMaxLabel\n    ) {\n        if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n            return false;\n        }\n\n        // FIXME\n        // Have not consider label overlap (if label is too long) yet.\n\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    function buildAxisTick(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n\n        if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n            return;\n        }\n\n        var tickModel = axisModel.getModel('axisTick');\n\n        var lineStyleModel = tickModel.getModel('lineStyle');\n        var tickLen = tickModel.get('length');\n\n        var tickInterval = getInterval(tickModel, opt.labelInterval);\n        var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n        // FIXME\n        // Corresponds to ticksCoords ?\n        var ticks = axis.scale.getTicks();\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        var pt1 = [];\n        var pt2 = [];\n        var matrix = axisBuilder._transform;\n\n        var tickEls = [];\n\n        var ticksCnt = ticksCoords.length;\n        for (var i = 0; i < ticksCnt; i++) {\n            // Only ordinal scale support tick interval\n            if (ifIgnoreOnTick(\n                axis, i, tickInterval, ticksCnt,\n                showMinLabel, showMaxLabel\n            )) {\n                continue;\n            }\n\n            var tickCoord = ticksCoords[i];\n\n            pt1[0] = tickCoord;\n            pt1[1] = 0;\n            pt2[0] = tickCoord;\n            pt2[1] = opt.tickDirection * tickLen;\n\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n            // Tick line, Not use group transform to have better line draw\n            var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n                // Id for animation\n                anid: 'tick_' + ticks[i],\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.defaults(\n                    lineStyleModel.getLineStyle(),\n                    {\n                        stroke: axisModel.get('axisLine.lineStyle.color')\n                    }\n                ),\n                z2: 2,\n                silent: true\n            }));\n            axisBuilder.group.add(tickEl);\n            tickEls.push(tickEl);\n        }\n\n        return tickEls;\n    }\n\n    function buildAxisLabel(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n        var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n        if (!show || axis.scale.isBlank()) {\n            return;\n        }\n\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelMargin = labelModel.get('margin');\n        var ticks = axis.scale.getTicks();\n        var labels = axisModel.getFormattedLabels();\n\n        // Special label rotate.\n        var labelRotation = (\n            retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n        ) * PI / 180;\n\n        var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n        var categoryData = axisModel.get('data');\n\n        var labelEls = [];\n        var silent = isSilent(axisModel);\n        var triggerEvent = axisModel.get('triggerEvent');\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        zrUtil.each(ticks, function (tickVal, index) {\n            if (ifIgnoreOnTick(\n                axis, index, opt.labelInterval, ticks.length,\n                showMinLabel, showMaxLabel\n            )) {\n                    return;\n            }\n\n            var itemLabelModel = labelModel;\n            if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                itemLabelModel = new Model(\n                    categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                );\n            }\n\n            var textColor = itemLabelModel.getTextColor()\n                || axisModel.get('axisLine.lineStyle.color');\n\n            var tickCoord = axis.dataToCoord(tickVal);\n            var pos = [\n                tickCoord,\n                opt.labelOffset + opt.labelDirection * labelMargin\n            ];\n            var labelStr = axis.scale.getLabel(tickVal);\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'label_' + tickVal,\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: silent,\n                z2: 10\n            });\n\n            graphic.setTextStyle(textEl.style, itemLabelModel, {\n                text: labels[index],\n                textAlign: itemLabelModel.getShallow('align', true)\n                    || labelLayout.textAlign,\n                textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                    || itemLabelModel.getShallow('baseline', true)\n                    || labelLayout.textVerticalAlign,\n                textFill: typeof textColor === 'function'\n                    ? textColor(\n                        // (1) In category axis with data zoom, tick is not the original\n                        // index of axis.data. So tick should not be exposed to user\n                        // in category axis.\n                        // (2) Compatible with previous version, which always returns labelStr.\n                        // But in interval scale labelStr is like '223,445', which maked\n                        // user repalce ','. So we modify it to return original val but remain\n                        // it as 'string' to avoid error in replacing.\n                        axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                        index\n                    )\n                    : textColor\n            });\n\n            // Pack data for mouse event\n            if (triggerEvent) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisLabel';\n                textEl.eventData.value = labelStr;\n            }\n\n            // FIXME\n            axisBuilder._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            labelEls.push(textEl);\n            axisBuilder.group.add(textEl);\n\n            textEl.decomposeTransform();\n\n        });\n\n        return labelEls;\n    }\n\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n\n/***/ 1661:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n    var env = __webpack_require__(1634);\n    var echarts = __webpack_require__(499);\n    var modelUtil = __webpack_require__(1629);\n    var helper = __webpack_require__(1663);\n    var AxisProxy = __webpack_require__(1744);\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null,     // The range of dataZoom can not be larger than that.\n            rangeMode: null         // Array, can be 'value' or 'percent'.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        var rangePropMode = dataZoomModel._rangePropMode;\n        var rangeModeInOption = dataZoomModel.get('rangeMode');\n\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var percentSpecified = rawOption[names[0]] != null;\n            var valueSpecified = rawOption[names[1]] != null;\n            if (percentSpecified && !valueSpecified) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (!percentSpecified && valueSpecified) {\n                rangePropMode[index] = 'value';\n            }\n            else if (rangeModeInOption) {\n                rangePropMode[index] = rangeModeInOption[index];\n            }\n            else if (percentSpecified) { // percentSpecified && valueSpecified\n                rangePropMode[index] = 'percent';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n/***/ }),\n\n/***/ 1662:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ComponentView = __webpack_require__(1688);\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1663:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var formatUtil = __webpack_require__(1631);\n    var zrUtil = __webpack_require__(1626);\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1664:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(1627);\n    var zrUtil = __webpack_require__(1626);\n    var echarts = __webpack_require__(499);\n\n    __webpack_require__(1684);\n\n    __webpack_require__(1738);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1665:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(1628);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(1626);\n    var axisHelper = __webpack_require__(1639);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n\n/***/ 1666:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var axisHelper = __webpack_require__(1639);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1667:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var clazz = __webpack_require__(1636);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n\n/***/ 1668:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(1657);\n    var componentUtil = __webpack_require__(1667);\n    var clazzUtil = __webpack_require__(1636);\n    var modelUtil = __webpack_require__(1629);\n    var zrUtil = __webpack_require__(1626);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n\n/***/ 1669:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n\n/***/ 1670:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var Style = __webpack_require__(1700);\n\n    var Element = __webpack_require__(1691);\n    var RectText = __webpack_require__(1825);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n\n/***/ 1671:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n\n/***/ 1672:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var LRU = __webpack_require__(1695);\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1673:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n    var symbolUtil = __webpack_require__(1654);\n    var graphic = __webpack_require__(1627);\n    var numberUtil = __webpack_require__(1628);\n    var labelHelper = __webpack_require__(1725);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setLabelStyle(\n                elStyle, hoverItemStyle, labelModel, hoverLabelModel,\n                {\n                    labelFetcher: seriesModel,\n                    labelDataIndex: idx,\n                    defaultText: data.get(valueDim, idx),\n                    isRectText: true,\n                    autoColor: color\n                }\n            );\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        // FIXME\n        // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n\n/***/ 1674:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(1647);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(499).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n\n/***/ 1675:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1676:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(499);\n    var axisPointerModelHelper = __webpack_require__(1647);\n    var axisTrigger = __webpack_require__(1743);\n    var zrUtil = __webpack_require__(1626);\n\n    __webpack_require__(1740);\n    __webpack_require__(1741);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(1677);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n\n/***/ 1677:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(1627);\n    var BaseAxisPointer = __webpack_require__(1742);\n    var viewHelper = __webpack_require__(1680);\n    var cartesianAxisHelper = __webpack_require__(1675);\n    var AxisView = __webpack_require__(1674);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n\n/***/ 1678:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var modelUtil = __webpack_require__(1629);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n\n/***/ 1679:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(1634);\n    var zrUtil = __webpack_require__(1626);\n    var get = __webpack_require__(1629).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n\n/***/ 1680:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var graphic = __webpack_require__(1627);\n    var textContain = __webpack_require__(1640);\n    var formatUtil = __webpack_require__(1631);\n    var matrix = __webpack_require__(1643);\n    var axisHelper = __webpack_require__(1639);\n    var AxisBuilder = __webpack_require__(1660);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1681:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n/***/ }),\n\n/***/ 1682:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n\n/***/ 1683:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(1635);\n    var zrUtil = __webpack_require__(1626);\n    var axisModelCreator = __webpack_require__(1766);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(1666));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n\n/***/ 1684:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(1637);\n    var axisHelper = __webpack_require__(1639);\n\n    var zrUtil = __webpack_require__(1626);\n    var Cartesian2D = __webpack_require__(1769);\n    var Axis2D = __webpack_require__(1767);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(1770);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(1646).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n\n/***/ 1685:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(1636);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1686:\n/***/ (function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ 1687:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(1628);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1688:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(1657);\n    var componentUtil = __webpack_require__(1667);\n    var clazzUtil = __webpack_require__(1636);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n\n/***/ 1689:\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1690:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1691:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(1696);\n    var Eventful = __webpack_require__(1644);\n    var Transformable = __webpack_require__(1705);\n    var Animatable = __webpack_require__(1835);\n    var zrUtil = __webpack_require__(1626);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n\n/***/ 1692:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(1808);\n    var color = __webpack_require__(1645);\n    var util = __webpack_require__(1626);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n\n/***/ 1693:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n\n/***/ 1694:\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1695:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n\n/***/ 1696:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n\n/***/ 1697:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(1656);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n\n/***/ 1698:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(1670);\n    var BoundingRect = __webpack_require__(1638);\n    var zrUtil = __webpack_require__(1626);\n    var imageHelper = __webpack_require__(1672);\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n\n/***/ 1699:\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n\n/***/ 1700:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textStrokeWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textStrokeWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n\n/***/ 1701:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(1634);\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n/***/ }),\n\n/***/ 1702:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(1824);\n    var smoothBezier = __webpack_require__(1823);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1703:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1704:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(1640);\n    var util = __webpack_require__(1626);\n    var roundRectHelper = __webpack_require__(1703);\n    var imageHelper = __webpack_require__(1672);\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textStrokeWidth = style.textStrokeWidth;\n        var textStroke = getStroke(style.textStroke, textStrokeWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            // ctx[prop] = ctx.__currentValues[prop] = value;\n        ctx[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n/***/ }),\n\n/***/ 1705:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(1643);\n    var vector = __webpack_require__(1630);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n\n/***/ 1717:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n\n/***/ 1718:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(499);\n    var zrUtil = __webpack_require__(1626);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1719:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(1721).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n\n/***/ 1720:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var graphic = __webpack_require__(1627);\n    var helper = __webpack_require__(1723);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(1633).prototype, __webpack_require__(1722));\n\n    var BarView = __webpack_require__(499).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n\n/***/ 1721:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(1650);\n    var createListFromArray = __webpack_require__(1659);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                // normal: {\n                    // color: '各异'\n                // },\n                // emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1722:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(1651)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1723:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(1627);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        graphic.setLabelStyle(\n            normalStyle, hoverStyle, labelModel, hoverLabelModel,\n            {\n                labelFetcher: seriesModel,\n                labelDataIndex: dataIndex,\n                defaultText: seriesModel.getRawValue(dataIndex),\n                isRectText: true,\n                autoColor: color\n            }\n        );\n\n        fixPosition(normalStyle);\n        fixPosition(hoverStyle);\n    };\n\n    function fixPosition(style, labelPositionOutside) {\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1724:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(1627);\n    var Symbol = __webpack_require__(1673);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n\n/***/ 1725:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var modelUtil = __webpack_require__(1629);\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1726:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(1659);\n    var SeriesModel = __webpack_require__(1650);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1727:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(1626);\n    var SymbolDraw = __webpack_require__(1724);\n    var Symbol = __webpack_require__(1673);\n    var lineAnimationDiff = __webpack_require__(1728);\n    var graphic = __webpack_require__(1627);\n    var modelUtil = __webpack_require__(1629);\n    var polyHelper = __webpack_require__(1729);\n    var ChartView = __webpack_require__(1668);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n\n        var valueStart = 0;\n        if (!baseAxis.onZero) {\n            var extent = valueAxis.scale.getExtent();\n            if (extent[0] > 0) {\n                // Both positive\n                valueStart = extent[0];\n            }\n            else if (extent[1] < 0) {\n                // Both negative\n                valueStart = extent[1];\n            }\n            // If is one positive, and one negative, onZero shall be true\n        }\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1728:\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n\n/***/ 1729:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(1632);\n    var vec2 = __webpack_require__(1630);\n    var fixClipWithShadow = __webpack_require__(1701);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n\n/***/ 1730:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(1648);\n    var zrUtil = __webpack_require__(1626);\n    var modelUtil = __webpack_require__(1629);\n    var numberUtil = __webpack_require__(1628);\n    var completeDimensions = __webpack_require__(1649);\n\n    var dataSelectableMixin = __webpack_require__(1756);\n\n    var PieSeries = __webpack_require__(499).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中时扇区偏移量\n            selectedOffset: 10,\n            // 高亮扇区偏移量\n            hoverOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ }),\n\n/***/ 1731:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(1627);\n    var zrUtil = __webpack_require__(1626);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + seriesModel.get('hoverOffset')\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setLabelStyle(\n            labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel,\n            {\n                labelFetcher: data.hostModel,\n                labelDataIndex: idx,\n                defaultText: data.getName(idx),\n                autoColor: visualColor,\n                useInsideStyle: !!labelLayout.inside\n            },\n            {\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.verticalAlign,\n                opacity: data.getItemVisual(idx, 'opacity')\n            }\n        );\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(1668).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ }),\n\n/***/ 1732:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(1640);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1733:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(1628);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(1732);\n    var zrUtil = __webpack_require__(1626);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1734:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(1650);\n    var List = __webpack_require__(1648);\n    var completeDimensions = __webpack_require__(1649);\n    var zrUtil = __webpack_require__(1626);\n    var encodeHTML = __webpack_require__(1631).encodeHTML;\n\n    var RadarSeries = SeriesModel.extend({\n\n        type: 'series.radar',\n\n        dependencies: ['radar'],\n\n\n        // Overwrite\n        init: function (option) {\n            RadarSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n        },\n\n        getInitialData: function (option, ecModel) {\n            var data = option.data || [];\n            var dimensions = completeDimensions(\n                [], data, {extraPrefix: 'indicator_', extraFromZero: true}\n            );\n            var list = new List(dimensions, this);\n            list.initData(data);\n            return list;\n        },\n\n        formatTooltip: function (dataIndex) {\n            var value = this.getRawValue(dataIndex);\n            var coordSys = this.coordinateSystem;\n            var indicatorAxes = coordSys.getIndicatorAxes();\n            var name = this.getData().getName(dataIndex);\n            return encodeHTML(name === '' ? this.name : name) + '<br/>'\n                + zrUtil.map(indicatorAxes, function (axis, idx) {\n                    return encodeHTML(axis.name + ' : ' + value[idx]);\n                }).join('<br />');\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            coordinateSystem: 'radar',\n            legendHoverLink: true,\n            radarIndex: 0,\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // areaStyle: {\n            // },\n            // itemStyle: {}\n            symbol: 'emptyCircle',\n            symbolSize: 4\n            // symbolRotate: null\n        }\n    });\n\n    module.exports = RadarSeries;\n\n\n/***/ }),\n\n/***/ 1735:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(1627);\n    var zrUtil = __webpack_require__(1626);\n    var symbolUtil = __webpack_require__(1654);\n\n    function normalizeSymbolSize(symbolSize) {\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [+symbolSize, +symbolSize];\n        }\n        return symbolSize;\n    }\n    module.exports = __webpack_require__(499).extendChartView({\n        type: 'radar',\n\n        render: function (seriesModel, ecModel, api) {\n            var polar = seriesModel.coordinateSystem;\n            var group = this.group;\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            function createSymbol(data, idx) {\n                var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n                var color = data.getItemVisual(idx, 'color');\n                if (symbolType === 'none') {\n                    return;\n                }\n                var symbolSize = normalizeSymbolSize(\n                    data.getItemVisual(idx, 'symbolSize')\n                );\n                var symbolPath = symbolUtil.createSymbol(\n                    symbolType, -1, -1, 2, 2, color\n                );\n                symbolPath.attr({\n                    style: {\n                        strokeNoScale: true\n                    },\n                    z2: 100,\n                    scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n                });\n                return symbolPath;\n            }\n\n            function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n                // Simply rerender all\n                symbolGroup.removeAll();\n                for (var i = 0; i < newPoints.length - 1; i++) {\n                    var symbolPath = createSymbol(data, idx);\n                    if (symbolPath) {\n                        symbolPath.__dimIdx = i;\n                        if (oldPoints[i]) {\n                            symbolPath.attr('position', oldPoints[i]);\n                            graphic[isInit ? 'initProps' : 'updateProps'](\n                                symbolPath, {\n                                    position: newPoints[i]\n                                }, seriesModel, idx\n                            );\n                        }\n                        else {\n                            symbolPath.attr('position', newPoints[i]);\n                        }\n                        symbolGroup.add(symbolPath);\n                    }\n                }\n            }\n\n            function getInitialPoints(points) {\n                return zrUtil.map(points, function (pt) {\n                    return [polar.cx, polar.cy];\n                });\n            }\n            data.diff(oldData)\n                .add(function (idx) {\n                    var points = data.getItemLayout(idx);\n                    if (!points) {\n                        return;\n                    }\n                    var polygon = new graphic.Polygon();\n                    var polyline = new graphic.Polyline();\n                    var target = {\n                        shape: {\n                            points: points\n                        }\n                    };\n                    polygon.shape.points = getInitialPoints(points);\n                    polyline.shape.points = getInitialPoints(points);\n                    graphic.initProps(polygon, target, seriesModel, idx);\n                    graphic.initProps(polyline, target, seriesModel, idx);\n\n                    var itemGroup = new graphic.Group();\n                    var symbolGroup = new graphic.Group();\n                    itemGroup.add(polyline);\n                    itemGroup.add(polygon);\n                    itemGroup.add(symbolGroup);\n\n                    updateSymbols(\n                        polyline.shape.points, points, symbolGroup, data, idx, true\n                    );\n\n                    data.setItemGraphicEl(idx, itemGroup);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var itemGroup = oldData.getItemGraphicEl(oldIdx);\n                    var polyline = itemGroup.childAt(0);\n                    var polygon = itemGroup.childAt(1);\n                    var symbolGroup = itemGroup.childAt(2);\n                    var target = {\n                        shape: {\n                            points: data.getItemLayout(newIdx)\n                        }\n                    };\n                    if (!target.shape.points) {\n                        return;\n                    }\n                    updateSymbols(\n                        polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false\n                    );\n\n                    graphic.updateProps(polyline, target, seriesModel);\n                    graphic.updateProps(polygon, target, seriesModel);\n\n                    data.setItemGraphicEl(newIdx, itemGroup);\n                })\n                .remove(function (idx) {\n                    group.remove(oldData.getItemGraphicEl(idx));\n                })\n                .execute();\n\n            data.eachItemGraphicEl(function (itemGroup, idx) {\n                var itemModel = data.getItemModel(idx);\n                var polyline = itemGroup.childAt(0);\n                var polygon = itemGroup.childAt(1);\n                var symbolGroup = itemGroup.childAt(2);\n                var color = data.getItemVisual(idx, 'color');\n\n                group.add(itemGroup);\n\n                polyline.useStyle(\n                    zrUtil.defaults(\n                        itemModel.getModel('lineStyle.normal').getLineStyle(),\n                        {\n                            fill: 'none',\n                            stroke: color\n                        }\n                    )\n                );\n                polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n                var areaStyleModel = itemModel.getModel('areaStyle.normal');\n                var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n                var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n                var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n\n                hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n                polygon.ignore = polygonIgnore;\n\n                polygon.useStyle(\n                    zrUtil.defaults(\n                        areaStyleModel.getAreaStyle(),\n                        {\n                            fill: color,\n                            opacity: 0.7\n                        }\n                    )\n                );\n                polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n\n                var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n                var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n                var labelModel = itemModel.getModel('label.normal');\n                var labelHoverModel = itemModel.getModel('label.emphasis');\n                symbolGroup.eachChild(function (symbolPath) {\n                    symbolPath.setStyle(itemStyle);\n                    symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n\n                    graphic.setLabelStyle(\n                        symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel,\n                        {\n                            labelFetcher: data.hostModel,\n                            labelDataIndex: idx,\n                            labelDimIndex: symbolPath.__dimIdx,\n                            defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n                            autoColor: color,\n                            isRectText: true\n                        }\n                    );\n                });\n\n                function onEmphasis() {\n                    polygon.attr('ignore', hoverPolygonIgnore);\n                }\n\n                function onNormal() {\n                    polygon.attr('ignore', polygonIgnore);\n                }\n\n                itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n                itemGroup.on('emphasis', onEmphasis)\n                    .on('mouseover', onEmphasis)\n                    .on('normal', onNormal)\n                    .on('mouseout', onNormal);\n\n                graphic.setHoverStyle(itemGroup);\n            });\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n\n/***/ }),\n\n/***/ 1736:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Backward compat for radar chart in 2\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    module.exports = function (option) {\n        var polarOptArr = option.polar;\n        if (polarOptArr) {\n            if (!zrUtil.isArray(polarOptArr)) {\n                polarOptArr = [polarOptArr];\n            }\n            var polarNotRadar = [];\n            zrUtil.each(polarOptArr, function (polarOpt, idx) {\n                if (polarOpt.indicator) {\n                    if (polarOpt.type && !polarOpt.shape) {\n                        polarOpt.shape = polarOpt.type;\n                    }\n                    option.radar = option.radar || [];\n                    if (!zrUtil.isArray(option.radar)) {\n                        option.radar = [option.radar];\n                    }\n                    option.radar.push(polarOpt);\n                }\n                else {\n                    polarNotRadar.push(polarOpt);\n                }\n            });\n            option.polar = polarNotRadar;\n        }\n        zrUtil.each(option.series, function (seriesOpt) {\n            if (seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n                seriesOpt.radarIndex = seriesOpt.polarIndex;\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1737:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (ecModel) {\n        ecModel.eachSeriesByType('radar', function (seriesModel) {\n            var data = seriesModel.getData();\n            var points = [];\n            var coordSys = seriesModel.coordinateSystem;\n            if (!coordSys) {\n                return;\n            }\n\n            function pointsConverter(val, idx) {\n                points[idx] = points[idx] || [];\n                points[idx][i] = coordSys.dataToPoint(val, i);\n            }\n            for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n                var dim = data.dimensions[i];\n                data.each(dim, pointsConverter);\n            }\n\n            data.each(function (idx) {\n                // Close polygon\n                points[idx][0] && points[idx].push(points[idx][0].slice());\n                data.setItemLayout(idx, points[idx]);\n            });\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1738:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(1683);\n\n    __webpack_require__(1739);\n\n\n/***/ }),\n\n/***/ 1739:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var graphic = __webpack_require__(1627);\n    var AxisBuilder = __webpack_require__(1660);\n    var AxisView = __webpack_require__(1674);\n    var cartesianAxisHelper = __webpack_require__(1675);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisTickLabel', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n            var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(\n                    axis, i, lineInterval, ticksCoords.length,\n                    showMinLabel, showMaxLabel\n                )) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n            var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(\n                    axis, i, areaInterval, ticksCoords.length,\n                    showMinLabel, showMaxLabel\n                )) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n\n/***/ 1740:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(499);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n\n/***/ 1741:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(1679);\n\n    var AxisPonterView = __webpack_require__(499).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1742:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var clazzUtil = __webpack_require__(1636);\n    var graphic = __webpack_require__(1627);\n    var get = __webpack_require__(1629).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(1647);\n    var eventTool = __webpack_require__(1641);\n    var throttle = __webpack_require__(1655);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n\n/***/ 1743:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var modelUtil = __webpack_require__(1629);\n    var modelHelper = __webpack_require__(1647);\n    var findPointFromSeries = __webpack_require__(1678);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n\n/***/ 1744:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Axis operator\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n    var numberUtil = __webpack_require__(1628);\n    var helper = __webpack_require__(1663);\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        precision = Math.min(precision, 20);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n/***/ }),\n\n/***/ 1745:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    module.exports = __webpack_require__(1661).extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            disabled: false,   // Whether disable this inside zoom.\n            zoomLock: false,   // Whether disable zoom but only pan.\n            zoomOnMouseWheel: true, // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n            moveOnMouseMove: true,   // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n            preventDefaultMouseMove: true\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1746:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var DataZoomView = __webpack_require__(1662);\n    var zrUtil = __webpack_require__(1626);\n    var sliderMove = __webpack_require__(1681);\n    var roams = __webpack_require__(1751);\n    var bind = zrUtil.bind;\n\n    var InsideZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @override\n         */\n        init: function (ecModel, api) {\n            /**\n             * 'throttle' is used in this.dispatchAction, so we save range\n             * to avoid missing some 'pan' info.\n             * @private\n             * @type {Array.<number>}\n             */\n            this._range;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            InsideZoomView.superApply(this, 'render', arguments);\n\n            // Notice: origin this._range should be maintained, and should not be re-fetched\n            // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n            // info will be missed because of 'throttle' of this.dispatchAction.\n            if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n                this._range = dataZoomModel.getPercentRange();\n            }\n\n            // Reset controllers.\n            zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n\n                var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n                    return roams.generateCoordId(coordInfo.model);\n                });\n\n                zrUtil.each(coordInfoList, function (coordInfo) {\n                    var coordModel = coordInfo.model;\n                    var dataZoomOption = dataZoomModel.option;\n\n                    roams.register(\n                        api,\n                        {\n                            coordId: roams.generateCoordId(coordModel),\n                            allCoordIds: allCoordIds,\n                            containsPoint: function (e, x, y) {\n                                return coordModel.coordinateSystem.containPoint([x, y]);\n                            },\n                            dataZoomId: dataZoomModel.id,\n                            throttleRate: dataZoomModel.get('throttle', true),\n                            panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n                            zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n                            zoomLock: dataZoomOption.zoomLock,\n                            disabled: dataZoomOption.disabled,\n                            roamControllerOpt: {\n                                zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n                                moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n                                preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n                            }\n                        }\n                    );\n                }, this);\n\n            }, this);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            roams.unregister(this.api, this.dataZoomModel.id);\n            InsideZoomView.superApply(this, 'dispose', arguments);\n            this._range = null;\n        },\n\n        /**\n         * @private\n         */\n        _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                [oldX, oldY], [newX, newY], axisModel, controller, coordInfo\n            );\n\n            var percentDelta = directionInfo.signal\n                * (range[1] - range[0])\n                * directionInfo.pixel / directionInfo.pixelLength;\n\n            sliderMove(percentDelta, range, [0, 100], 'all');\n\n            return (this._range = range);\n        },\n\n        /**\n         * @private\n         */\n        _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                null, [mouseX, mouseY], axisModel, controller, coordInfo\n            );\n            var percentPoint = (\n                directionInfo.signal > 0\n                    ? (directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel)\n                    : (directionInfo.pixel - directionInfo.pixelStart)\n                ) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n\n            scale = Math.max(1 / scale, 0);\n            range[0] = (range[0] - percentPoint) * scale + percentPoint;\n            range[1] = (range[1] - percentPoint) * scale + percentPoint;\n\n            // Restrict range.\n            var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n            sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n\n            return (this._range = range);\n        }\n\n    });\n\n    var getDirectionInfo = {\n\n        grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.dim === 'x') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // axis.dim === 'y'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var polar = coordInfo.model.coordinateSystem;\n            var radiusExtent = polar.getRadiusAxis().getExtent();\n            var angleExtent = polar.getAngleAxis().getExtent();\n\n            oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n            newPoint = polar.pointToCoord(newPoint);\n\n            if (axisModel.mainType === 'radiusAxis') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n                // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n                ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n                ret.pixelStart = radiusExtent[0];\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'angleAxis'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n                // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n                ret.pixelLength = angleExtent[1] - angleExtent[0];\n                ret.pixelStart = angleExtent[0];\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            var ret = {};\n\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.orient === 'horizontal') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'vertical'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        }\n    };\n\n    module.exports = InsideZoomView;\n\n\n/***/ }),\n\n/***/ 1747:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = __webpack_require__(1661);\n\n    var SliderZoomModel = DataZoomModel.extend({\n\n        type: 'dataZoom.slider',\n\n        layoutMode: 'box',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            show: true,\n\n            // ph => placeholder. Using placehoder here because\n            // deault value can only be drived in view stage.\n            right: 'ph',  // Default align to grid rect.\n            top: 'ph',    // Default align to grid rect.\n            width: 'ph',  // Default align to grid rect.\n            height: 'ph', // Default align to grid rect.\n            left: null,   // Default align to grid rect.\n            bottom: null, // Default align to grid rect.\n\n            backgroundColor: 'rgba(47,69,84,0)',    // Background of slider zoom component.\n            // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n                                                    // highest priority, remain for compatibility of\n                                                    // previous version, but not recommended any more.\n            dataBackground: {\n                lineStyle: {\n                    color: '#2f4554',\n                    width: 0.5,\n                    opacity: 0.3\n                },\n                areaStyle: {\n                    color: 'rgba(47,69,84,0.3)',\n                    opacity: 0.3\n                }\n            },\n            borderColor: '#ddd',                    // border color of the box. For compatibility,\n                                                    // if dataBackgroundColor is set, borderColor\n                                                    // is ignored.\n\n            fillerColor: 'rgba(167,183,204,0.4)',     // Color of selected area.\n            // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n            // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n            handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n            // Percent of the slider height\n            handleSize: '100%',\n\n            handleStyle: {\n                color: '#a7b7cc'\n            },\n\n            labelPrecision: null,\n            labelFormatter: null,\n            showDetail: true,\n            showDataShadow: 'auto',                 // Default auto decision.\n            realtime: true,\n            zoomLock: false,                        // Whether disable zoom.\n            textStyle: {\n                color: '#333'\n            }\n        }\n\n    });\n\n    module.exports = SliderZoomModel;\n\n\n\n/***/ }),\n\n/***/ 1748:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var graphic = __webpack_require__(1627);\n    var throttle = __webpack_require__(1655);\n    var DataZoomView = __webpack_require__(1662);\n    var Rect = graphic.Rect;\n    var numberUtil = __webpack_require__(1628);\n    var linearMap = numberUtil.linearMap;\n    var layout = __webpack_require__(1637);\n    var sliderMove = __webpack_require__(1681);\n    var eventTool = __webpack_require__(1641);\n\n    var asc = numberUtil.asc;\n    var bind = zrUtil.bind;\n    // var mathMax = Math.max;\n    var each = zrUtil.each;\n\n    // Constants\n    var DEFAULT_LOCATION_EDGE_GAP = 7;\n    var DEFAULT_FRAME_BORDER_WIDTH = 1;\n    var DEFAULT_FILLER_SIZE = 30;\n    var HORIZONTAL = 'horizontal';\n    var VERTICAL = 'vertical';\n    var LABEL_GAP = 5;\n    var SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\n\n    var SliderZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.slider',\n\n        init: function (ecModel, api) {\n\n            /**\n             * @private\n             * @type {Object}\n             */\n            this._displayables = {};\n\n            /**\n             * @private\n             * @type {string}\n             */\n            this._orient;\n\n            /**\n             * [0, 100]\n             * @private\n             */\n            this._range;\n\n            /**\n             * [coord of the first handle, coord of the second handle]\n             * @private\n             */\n            this._handleEnds;\n\n            /**\n             * [length, thick]\n             * @private\n             * @type {Array.<number>}\n             */\n            this._size;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleWidth;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleHeight;\n\n            /**\n             * @private\n             */\n            this._location;\n\n            /**\n             * @private\n             */\n            this._dragging;\n\n            /**\n             * @private\n             */\n            this._dataShadowInfo;\n\n            this.api = api;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            SliderZoomView.superApply(this, 'render', arguments);\n\n            throttle.createOrUpdate(\n                this,\n                '_dispatchZoomAction',\n                this.dataZoomModel.get('throttle'),\n                'fixRate'\n            );\n\n            this._orient = dataZoomModel.get('orient');\n\n            if (this.dataZoomModel.get('show') === false) {\n                this.group.removeAll();\n                return;\n            }\n\n            // Notice: this._resetInterval() should not be executed when payload.type\n            // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n            // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n            if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n                this._buildView();\n            }\n\n            this._updateView();\n        },\n\n        /**\n         * @override\n         */\n        remove: function () {\n            SliderZoomView.superApply(this, 'remove', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            SliderZoomView.superApply(this, 'dispose', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        _buildView: function () {\n            var thisGroup = this.group;\n\n            thisGroup.removeAll();\n\n            this._resetLocation();\n            this._resetInterval();\n\n            var barGroup = this._displayables.barGroup = new graphic.Group();\n\n            this._renderBackground();\n\n            this._renderHandle();\n\n            this._renderDataShadow();\n\n            thisGroup.add(barGroup);\n\n            this._positionGroup();\n        },\n\n        /**\n         * @private\n         */\n        _resetLocation: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var api = this.api;\n\n            // If some of x/y/width/height are not specified,\n            // auto-adapt according to target grid.\n            var coordRect = this._findCoordRect();\n            var ecSize = {width: api.getWidth(), height: api.getHeight()};\n            // Default align by coordinate system rect.\n            var positionInfo = this._orient === HORIZONTAL\n                ? {\n                    // Why using 'right', because right should be used in vertical,\n                    // and it is better to be consistent for dealing with position param merge.\n                    right: ecSize.width - coordRect.x - coordRect.width,\n                    top: (ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP),\n                    width: coordRect.width,\n                    height: DEFAULT_FILLER_SIZE\n                }\n                : { // vertical\n                    right: DEFAULT_LOCATION_EDGE_GAP,\n                    top: coordRect.y,\n                    width: DEFAULT_FILLER_SIZE,\n                    height: coordRect.height\n                };\n\n            // Do not write back to option and replace value 'ph', because\n            // the 'ph' value should be recalculated when resize.\n            var layoutParams = layout.getLayoutParams(dataZoomModel.option);\n\n            // Replace the placeholder value.\n            zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n                if (layoutParams[name] === 'ph') {\n                    layoutParams[name] = positionInfo[name];\n                }\n            });\n\n            var layoutRect = layout.getLayoutRect(\n                layoutParams,\n                ecSize,\n                dataZoomModel.padding\n            );\n\n            this._location = {x: layoutRect.x, y: layoutRect.y};\n            this._size = [layoutRect.width, layoutRect.height];\n            this._orient === VERTICAL && this._size.reverse();\n        },\n\n        /**\n         * @private\n         */\n        _positionGroup: function () {\n            var thisGroup = this.group;\n            var location = this._location;\n            var orient = this._orient;\n\n            // Just use the first axis to determine mapping.\n            var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n            var inverse = targetAxisModel && targetAxisModel.get('inverse');\n\n            var barGroup = this._displayables.barGroup;\n            var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse;\n\n            // Transform barGroup.\n            barGroup.attr(\n                (orient === HORIZONTAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, 1] : [1, -1]}\n                : (orient === HORIZONTAL && inverse)\n                ? {scale: otherAxisInverse ? [-1, 1] : [-1, -1]}\n                : (orient === VERTICAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, -1] : [1, 1], rotation: Math.PI / 2}\n                // Dont use Math.PI, considering shadow direction.\n                : {scale: otherAxisInverse ? [-1, -1] : [-1, 1], rotation: Math.PI / 2}\n            );\n\n            // Position barGroup\n            var rect = thisGroup.getBoundingRect([barGroup]);\n            thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n        },\n\n        /**\n         * @private\n         */\n        _getViewExtent: function () {\n            return [0, this._size[0]];\n        },\n\n        _renderBackground: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var size = this._size;\n            var barGroup = this._displayables.barGroup;\n\n            barGroup.add(new Rect({\n                silent: true,\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: dataZoomModel.get('backgroundColor')\n                },\n                z2: -40\n            }));\n\n            // Click panel, over shadow, below handles.\n            barGroup.add(new Rect({\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: 'transparent'\n                },\n                z2: 0,\n                onclick: zrUtil.bind(this._onClickPanelClick, this)\n            }));\n        },\n\n        _renderDataShadow: function () {\n            var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n            if (!info) {\n                return;\n            }\n\n            var size = this._size;\n            var seriesModel = info.series;\n            var data = seriesModel.getRawData();\n            var otherDim = seriesModel.getShadowDim\n                ? seriesModel.getShadowDim() // @see candlestick\n                : info.otherDim;\n\n            if (otherDim == null) {\n                return;\n            }\n\n            var otherDataExtent = data.getDataExtent(otherDim);\n            // Nice extent.\n            var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n            otherDataExtent = [\n                otherDataExtent[0] - otherOffset,\n                otherDataExtent[1] + otherOffset\n            ];\n            var otherShadowExtent = [0, size[1]];\n\n            var thisShadowExtent = [0, size[0]];\n\n            var areaPoints = [[size[0], 0], [0, 0]];\n            var linePoints = [];\n            var step = thisShadowExtent[1] / (data.count() - 1);\n            var thisCoord = 0;\n\n            // Optimize for large data shadow\n            var stride = Math.round(data.count() / size[0]);\n            var lastIsEmpty;\n            data.each([otherDim], function (value, index) {\n                if (stride > 0 && (index % stride)) {\n                    thisCoord += step;\n                    return;\n                }\n\n                // FIXME\n                // Should consider axis.min/axis.max when drawing dataShadow.\n\n                // FIXME\n                // 应该使用统一的空判断？还是在list里进行空判断？\n                var isEmpty = value == null || isNaN(value) || value === '';\n                // See #4235.\n                var otherCoord = isEmpty\n                    ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true);\n\n                // Attempt to draw data shadow precisely when there are empty value.\n                if (isEmpty && !lastIsEmpty && index) {\n                    areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n                    linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n                }\n                else if (!isEmpty && lastIsEmpty) {\n                    areaPoints.push([thisCoord, 0]);\n                    linePoints.push([thisCoord, 0]);\n                }\n\n                areaPoints.push([thisCoord, otherCoord]);\n                linePoints.push([thisCoord, otherCoord]);\n\n                thisCoord += step;\n                lastIsEmpty = isEmpty;\n            });\n\n            var dataZoomModel = this.dataZoomModel;\n            // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n            this._displayables.barGroup.add(new graphic.Polygon({\n                shape: {points: areaPoints},\n                style: zrUtil.defaults(\n                    {fill: dataZoomModel.get('dataBackgroundColor')},\n                    dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()\n                ),\n                silent: true,\n                z2: -20\n            }));\n            this._displayables.barGroup.add(new graphic.Polyline({\n                shape: {points: linePoints},\n                style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n                silent: true,\n                z2: -19\n            }));\n        },\n\n        _prepareDataShadowInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var showDataShadow = dataZoomModel.get('showDataShadow');\n\n            if (showDataShadow === false) {\n                return;\n            }\n\n            // Find a representative series.\n            var result;\n            var ecModel = this.ecModel;\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var seriesModels = dataZoomModel\n                    .getAxisProxy(dimNames.name, axisIndex)\n                    .getTargetSeriesModels();\n\n                zrUtil.each(seriesModels, function (seriesModel) {\n                    if (result) {\n                        return;\n                    }\n\n                    if (showDataShadow !== true && zrUtil.indexOf(\n                            SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')\n                        ) < 0\n                    ) {\n                        return;\n                    }\n\n                    var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n                    var otherDim = getOtherDim(dimNames.name);\n                    var otherAxisInverse;\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (otherDim != null && coordSys.getOtherAxis) {\n                        otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n                    }\n\n                    result = {\n                        thisAxis: thisAxis,\n                        series: seriesModel,\n                        thisDim: dimNames.name,\n                        otherDim: otherDim,\n                        otherAxisInverse: otherAxisInverse\n                    };\n\n                }, this);\n\n            }, this);\n\n            return result;\n        },\n\n        _renderHandle: function () {\n            var displaybles = this._displayables;\n            var handles = displaybles.handles = [];\n            var handleLabels = displaybles.handleLabels = [];\n            var barGroup = this._displayables.barGroup;\n            var size = this._size;\n            var dataZoomModel = this.dataZoomModel;\n\n            barGroup.add(displaybles.filler = new Rect({\n                draggable: true,\n                cursor: getCursor(this._orient),\n                drift: bind(this._onDragMove, this, 'all'),\n                onmousemove: function (e) {\n                    // Fot mobile devicem, prevent screen slider on the button.\n                    eventTool.stop(e.event);\n                },\n                ondragstart: bind(this._showDataInfo, this, true),\n                ondragend: bind(this._onDragEnd, this),\n                onmouseover: bind(this._showDataInfo, this, true),\n                onmouseout: bind(this._showDataInfo, this, false),\n                style: {\n                    fill: dataZoomModel.get('fillerColor'),\n                    textPosition : 'inside'\n                }\n            }));\n\n            // Frame border.\n            barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n                silent: true,\n                shape: {\n                    x: 0,\n                    y: 0,\n                    width: size[0],\n                    height: size[1]\n                },\n                style: {\n                    stroke: dataZoomModel.get('dataBackgroundColor')\n                        || dataZoomModel.get('borderColor'),\n                    lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n                    fill: 'rgba(0,0,0,0)'\n                }\n            })));\n\n            each([0, 1], function (handleIndex) {\n                var path = graphic.createIcon(\n                    dataZoomModel.get('handleIcon'),\n                    {\n                        cursor: getCursor(this._orient),\n                        draggable: true,\n                        drift: bind(this._onDragMove, this, handleIndex),\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        ondragend: bind(this._onDragEnd, this),\n                        onmouseover: bind(this._showDataInfo, this, true),\n                        onmouseout: bind(this._showDataInfo, this, false)\n                    },\n                    {x: -1, y: 0, width: 2, height: 2}\n                );\n\n                var bRect = path.getBoundingRect();\n                this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n                this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n\n                path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n                var handleColor = dataZoomModel.get('handleColor');\n                // Compatitable with previous version\n                if (handleColor != null) {\n                    path.style.fill = handleColor;\n                }\n\n                barGroup.add(handles[handleIndex] = path);\n\n                var textStyleModel = dataZoomModel.textStyleModel;\n\n                this.group.add(\n                    handleLabels[handleIndex] = new graphic.Text({\n                    silent: true,\n                    invisible: true,\n                    style: {\n                        x: 0, y: 0, text: '',\n                        textVerticalAlign: 'middle',\n                        textAlign: 'center',\n                        textFill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont()\n                    },\n                    z2: 10\n                }));\n\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetInterval: function () {\n            var range = this._range = this.dataZoomModel.getPercentRange();\n            var viewExtent = this._getViewExtent();\n\n            this._handleEnds = [\n                linearMap(range[0], [0, 100], viewExtent, true),\n                linearMap(range[1], [0, 100], viewExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         * @param {(number|string)} handleIndex 0 or 1 or 'all'\n         * @param {number} delta\n         */\n        _updateInterval: function (handleIndex, delta) {\n            var dataZoomModel = this.dataZoomModel;\n            var handleEnds = this._handleEnds;\n            var viewExtend = this._getViewExtent();\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n            var percentExtent = [0, 100];\n\n            sliderMove(\n                delta,\n                handleEnds,\n                viewExtend,\n                dataZoomModel.get('zoomLock') ? 'all' : handleIndex,\n                minMaxSpan.minSpan != null\n                    ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null,\n                minMaxSpan.maxSpan != null\n                    ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null\n            );\n\n            this._range = asc([\n                linearMap(handleEnds[0], viewExtend, percentExtent, true),\n                linearMap(handleEnds[1], viewExtend, percentExtent, true)\n            ]);\n        },\n\n        /**\n         * @private\n         */\n        _updateView: function (nonRealtime) {\n            var displaybles = this._displayables;\n            var handleEnds = this._handleEnds;\n            var handleInterval = asc(handleEnds.slice());\n            var size = this._size;\n\n            each([0, 1], function (handleIndex) {\n                // Handles\n                var handle = displaybles.handles[handleIndex];\n                var handleHeight = this._handleHeight;\n                handle.attr({\n                    scale: [handleHeight / 2, handleHeight / 2],\n                    position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n                });\n            }, this);\n\n            // Filler\n            displaybles.filler.setShape({\n                x: handleInterval[0],\n                y: 0,\n                width: handleInterval[1] - handleInterval[0],\n                height: size[1]\n            });\n\n            this._updateDataInfo(nonRealtime);\n        },\n\n        /**\n         * @private\n         */\n        _updateDataInfo: function (nonRealtime) {\n            var dataZoomModel = this.dataZoomModel;\n            var displaybles = this._displayables;\n            var handleLabels = displaybles.handleLabels;\n            var orient = this._orient;\n            var labelTexts = ['', ''];\n\n            // FIXME\n            // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n            if (dataZoomModel.get('showDetail')) {\n                var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n                if (axisProxy) {\n                    var axis = axisProxy.getAxisModel().axis;\n                    var range = this._range;\n\n                    var dataInterval = nonRealtime\n                        // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n                        ? axisProxy.calculateDataWindow({\n                            start: range[0], end: range[1]\n                        }).valueWindow\n                        : axisProxy.getDataValueWindow();\n\n                    labelTexts = [\n                        this._formatLabel(dataInterval[0], axis),\n                        this._formatLabel(dataInterval[1], axis)\n                    ];\n                }\n            }\n\n            var orderedHandleEnds = asc(this._handleEnds.slice());\n\n            setLabel.call(this, 0);\n            setLabel.call(this, 1);\n\n            function setLabel(handleIndex) {\n                // Label\n                // Text should not transform by barGroup.\n                // Ignore handlers transform\n                var barTransform = graphic.getTransform(\n                    displaybles.handles[handleIndex].parent, this.group\n                );\n                var direction = graphic.transformDirection(\n                    handleIndex === 0 ? 'right' : 'left', barTransform\n                );\n                var offset = this._handleWidth / 2 + LABEL_GAP;\n                var textPoint = graphic.applyTransform(\n                    [\n                        orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset),\n                        this._size[1] / 2\n                    ],\n                    barTransform\n                );\n                handleLabels[handleIndex].setStyle({\n                    x: textPoint[0],\n                    y: textPoint[1],\n                    textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n                    textAlign: orient === HORIZONTAL ? direction : 'center',\n                    text: labelTexts[handleIndex]\n                });\n            }\n        },\n\n        /**\n         * @private\n         */\n        _formatLabel: function (value, axis) {\n            var dataZoomModel = this.dataZoomModel;\n            var labelFormatter = dataZoomModel.get('labelFormatter');\n\n            var labelPrecision = dataZoomModel.get('labelPrecision');\n            if (labelPrecision == null || labelPrecision === 'auto') {\n                labelPrecision = axis.getPixelPrecision();\n            }\n\n            var valueStr = (value == null || isNaN(value))\n                ? ''\n                // FIXME Glue code\n                : (axis.type === 'category' || axis.type === 'time')\n                    ? axis.scale.getLabel(Math.round(value))\n                    // param of toFixed should less then 20.\n                    : value.toFixed(Math.min(labelPrecision, 20));\n\n            return zrUtil.isFunction(labelFormatter)\n                ? labelFormatter(value, valueStr)\n                : zrUtil.isString(labelFormatter)\n                ? labelFormatter.replace('{value}', valueStr)\n                : valueStr;\n        },\n\n        /**\n         * @private\n         * @param {boolean} showOrHide true: show, false: hide\n         */\n        _showDataInfo: function (showOrHide) {\n            // Always show when drgging.\n            showOrHide = this._dragging || showOrHide;\n\n            var handleLabels = this._displayables.handleLabels;\n            handleLabels[0].attr('invisible', !showOrHide);\n            handleLabels[1].attr('invisible', !showOrHide);\n        },\n\n        _onDragMove: function (handleIndex, dx, dy) {\n            this._dragging = true;\n\n            // Transform dx, dy to bar coordination.\n            var barTransform = this._displayables.barGroup.getLocalTransform();\n            var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n            this._updateInterval(handleIndex, vertex[0]);\n\n            var realtime = this.dataZoomModel.get('realtime');\n\n            this._updateView(!realtime);\n\n            if (realtime) {\n                realtime && this._dispatchZoomAction();\n            }\n        },\n\n        _onDragEnd: function () {\n            this._dragging = false;\n            this._showDataInfo(false);\n            this._dispatchZoomAction();\n        },\n\n        _onClickPanelClick: function (e) {\n            var size = this._size;\n            var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            if (localPoint[0] < 0 || localPoint[0] > size[0]\n                || localPoint[1] < 0 || localPoint[1] > size[1]\n            ) {\n                return;\n            }\n\n            var handleEnds = this._handleEnds;\n            var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n            this._updateInterval('all', localPoint[0] - center);\n            this._updateView();\n            this._dispatchZoomAction();\n        },\n\n        /**\n         * This action will be throttled.\n         * @private\n         */\n        _dispatchZoomAction: function () {\n            var range = this._range;\n\n            this.api.dispatchAction({\n                type: 'dataZoom',\n                from: this.uid,\n                dataZoomId: this.dataZoomModel.id,\n                start: range[0],\n                end: range[1]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _findCoordRect: function () {\n            // Find the grid coresponding to the first axis referred by dataZoom.\n            var rect;\n            each(this.getTargetCoordInfo(), function (coordInfoList) {\n                if (!rect && coordInfoList.length) {\n                    var coordSys = coordInfoList[0].model.coordinateSystem;\n                    rect = coordSys.getRect && coordSys.getRect();\n                }\n            });\n            if (!rect) {\n                var width = this.api.getWidth();\n                var height = this.api.getHeight();\n                rect = {\n                    x: width * 0.2,\n                    y: height * 0.2,\n                    width: width * 0.6,\n                    height: height * 0.6\n                };\n            }\n\n            return rect;\n        }\n\n    });\n\n    function getOtherDim(thisDim) {\n        // FIXME\n        // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n        var map = {x: 'y', y: 'x', radius: 'angle', angle: 'radius'};\n        return map[thisDim];\n    }\n\n    function getCursor(orient) {\n        return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n    }\n\n    module.exports = SliderZoomView;\n\n\n\n/***/ }),\n\n/***/ 1749:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n    var helper = __webpack_require__(1663);\n    var echarts = __webpack_require__(499);\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1750:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom processor\n */\n\n\n    var echarts = __webpack_require__(499);\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n/***/ }),\n\n/***/ 1751:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Roam controller manager.\n */\n\n\n    // Only create one roam controller for each coordinate system.\n    // one roam controller might be refered by two inside data zoom\n    // components (for example, one for x and one for y). When user\n    // pan or zoom, only dispatch one action for those data zoom\n    // components.\n\n    var zrUtil = __webpack_require__(1626);\n    var RoamController = __webpack_require__(1753);\n    var throttle = __webpack_require__(1655);\n    var curry = zrUtil.curry;\n\n    var ATTR = '\\0_ec_dataZoom_roams';\n\n    var roams = {\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} dataZoomInfo\n         * @param {string} dataZoomInfo.coordId\n         * @param {Function} dataZoomInfo.containsPoint\n         * @param {Array.<string>} dataZoomInfo.allCoordIds\n         * @param {string} dataZoomInfo.dataZoomId\n         * @param {number} dataZoomInfo.throttleRate\n         * @param {Function} dataZoomInfo.panGetRange\n         * @param {Function} dataZoomInfo.zoomGetRange\n         * @param {boolean} [dataZoomInfo.zoomLock]\n         * @param {boolean} [dataZoomInfo.disabled]\n         */\n        register: function (api, dataZoomInfo) {\n            var store = giveStore(api);\n            var theDataZoomId = dataZoomInfo.dataZoomId;\n            var theCoordId = dataZoomInfo.coordId;\n\n            // Do clean when a dataZoom changes its target coordnate system.\n            // Avoid memory leak, dispose all not-used-registered.\n            zrUtil.each(store, function (record, coordId) {\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[theDataZoomId]\n                    && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0\n                ) {\n                    delete dataZoomInfos[theDataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n\n            var record = store[theCoordId];\n            // Create if needed.\n            if (!record) {\n                record = store[theCoordId] = {\n                    coordId: theCoordId,\n                    dataZoomInfos: {},\n                    count: 0\n                };\n                record.controller = createController(api, record);\n                record.dispatchAction = zrUtil.curry(dispatchAction, api);\n            }\n\n            // Update reference of dataZoom.\n            !(record.dataZoomInfos[theDataZoomId]) && record.count++;\n            record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n\n            var controllerParams = mergeControllerParams(record.dataZoomInfos);\n            record.controller.enable(controllerParams.controlType, controllerParams.opt);\n\n            // Consider resize, area should be always updated.\n            record.controller.setPointerChecker(dataZoomInfo.containsPoint);\n\n            // Update throttle.\n            throttle.createOrUpdate(\n                record,\n                'dispatchAction',\n                dataZoomInfo.throttleRate,\n                'fixRate'\n            );\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {string} dataZoomId\n         */\n        unregister: function (api, dataZoomId) {\n            var store = giveStore(api);\n\n            zrUtil.each(store, function (record) {\n                record.controller.dispose();\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[dataZoomId]) {\n                    delete dataZoomInfos[dataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n        },\n\n        /**\n         * @public\n         */\n        shouldRecordRange: function (payload, dataZoomId) {\n            if (payload && payload.type === 'dataZoom' && payload.batch) {\n                for (var i = 0, len = payload.batch.length; i < len; i++) {\n                    if (payload.batch[i].dataZoomId === dataZoomId) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        /**\n         * @public\n         */\n        generateCoordId: function (coordModel) {\n            return coordModel.type + '\\0_' + coordModel.id;\n        }\n    };\n\n    /**\n     * Key: coordId, value: {dataZoomInfos: [], count, controller}\n     * @type {Array.<Object>}\n     */\n    function giveStore(api) {\n        // Mount store on zrender instance, so that we do not\n        // need to worry about dispose.\n        var zr = api.getZr();\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    function createController(api, newRecord) {\n        var controller = new RoamController(api.getZr());\n        controller.on('pan', curry(onPan, newRecord));\n        controller.on('zoom', curry(onZoom, newRecord));\n\n        return controller;\n    }\n\n    function cleanStore(store) {\n        zrUtil.each(store, function (record, coordId) {\n            if (!record.count) {\n                record.controller.dispose();\n                delete store[coordId];\n            }\n        });\n    }\n\n    function onPan(record, dx, dy, oldX, oldY, newX, newY) {\n        wrapAndDispatch(record, function (info) {\n            return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n        });\n    }\n\n    function onZoom(record, scale, mouseX, mouseY) {\n        wrapAndDispatch(record, function (info) {\n            return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n        });\n    }\n\n    function wrapAndDispatch(record, getRange) {\n        var batch = [];\n\n        zrUtil.each(record.dataZoomInfos, function (info) {\n            var range = getRange(info);\n            !info.disabled && range && batch.push({\n                dataZoomId: info.dataZoomId,\n                start: range[0],\n                end: range[1]\n            });\n        });\n\n        record.dispatchAction(batch);\n    }\n\n    /**\n     * This action will be throttled.\n     */\n    function dispatchAction(api, batch) {\n        api.dispatchAction({\n            type: 'dataZoom',\n            batch: batch\n        });\n    }\n\n    /**\n     * Merge roamController settings when multiple dataZooms share one roamController.\n     */\n    function mergeControllerParams(dataZoomInfos) {\n        var controlType;\n        var opt = {};\n        var typePriority = {\n            'true': 2,\n            'move': 1,\n            'false': 0,\n            'undefined': -1\n        };\n        zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n            var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n            typePriority[oneType] > typePriority[controlType] && (controlType = oneType);\n            // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n            zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n        });\n\n        return {\n            controlType: controlType,\n            opt: opt\n        };\n    }\n\n    module.exports = roams;\n\n\n\n/***/ }),\n\n/***/ 1752:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(1635).registerSubTypeDefaulter('dataZoom', function () {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n/***/ }),\n\n/***/ 1753:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/helper/RoamController\n */\n\n\n    var Eventful = __webpack_require__(1644);\n    var zrUtil = __webpack_require__(1626);\n    var eventTool = __webpack_require__(1641);\n    var interactionMutex = __webpack_require__(1754);\n\n    /**\n     * @alias module:echarts/component/helper/RoamController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function RoamController(zr) {\n\n        /**\n         * @type {Function}\n         */\n        this.pointerChecker;\n\n        /**\n         * @type {module:zrender}\n         */\n        this._zr = zr;\n\n        /**\n         * @type {Object}\n         */\n        this._opt = {};\n\n        // Avoid two roamController bind the same handler\n        var bind = zrUtil.bind;\n        var mousedownHandler = bind(mousedown, this);\n        var mousemoveHandler = bind(mousemove, this);\n        var mouseupHandler = bind(mouseup, this);\n        var mousewheelHandler = bind(mousewheel, this);\n        var pinchHandler = bind(pinch, this);\n\n        Eventful.call(this);\n\n        /**\n         * @param {Function} pointerChecker\n         *                   input: x, y\n         *                   output: boolean\n         */\n        this.setPointerChecker = function (pointerChecker) {\n            this.pointerChecker = pointerChecker;\n        };\n\n        /**\n         * Notice: only enable needed types. For example, if 'zoom'\n         * is not needed, 'zoom' should not be enabled, otherwise\n         * default mousewheel behaviour (scroll page) will be disabled.\n         *\n         * @param  {boolean|string} [controlType=true] Specify the control type,\n         *                          which can be null/undefined or true/false\n         *                          or 'pan/move' or 'zoom'/'scale'\n         * @param {Object} [opt]\n         * @param {Object} [opt.zoomOnMouseWheel=true]\n         * @param {Object} [opt.moveOnMouseMove=true]\n         * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n         */\n        this.enable = function (controlType, opt) {\n\n            // Disable previous first\n            this.disable();\n\n            this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n                zoomOnMouseWheel: true,\n                moveOnMouseMove: true,\n                preventDefaultMouseMove: true\n            });\n\n            if (controlType == null) {\n                controlType = true;\n            }\n\n            if (controlType === true || (controlType === 'move' || controlType === 'pan')) {\n                zr.on('mousedown', mousedownHandler);\n                zr.on('mousemove', mousemoveHandler);\n                zr.on('mouseup', mouseupHandler);\n            }\n            if (controlType === true || (controlType === 'scale' || controlType === 'zoom')) {\n                zr.on('mousewheel', mousewheelHandler);\n                zr.on('pinch', pinchHandler);\n            }\n        };\n\n        this.disable = function () {\n            zr.off('mousedown', mousedownHandler);\n            zr.off('mousemove', mousemoveHandler);\n            zr.off('mouseup', mouseupHandler);\n            zr.off('mousewheel', mousewheelHandler);\n            zr.off('pinch', pinchHandler);\n        };\n\n        this.dispose = this.disable;\n\n        this.isDragging = function () {\n            return this._dragging;\n        };\n\n        this.isPinching = function () {\n            return this._pinching;\n        };\n    }\n\n    zrUtil.mixin(RoamController, Eventful);\n\n\n    function mousedown(e) {\n        if (eventTool.notLeftMouse(e)\n            || (e.target && e.target.draggable)\n        ) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        // Only check on mosedown, but not mousemove.\n        // Mouse can be out of target when mouse moving.\n        if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n            this._x = x;\n            this._y = y;\n            this._dragging = true;\n        }\n    }\n\n    function mousemove(e) {\n        if (eventTool.notLeftMouse(e)\n            || !checkKeyBinding(this, 'moveOnMouseMove', e)\n            || !this._dragging\n            || e.gestureEvent === 'pinch'\n            || interactionMutex.isTaken(this._zr, 'globalPan')\n        ) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        var oldX = this._x;\n        var oldY = this._y;\n\n        var dx = x - oldX;\n        var dy = y - oldY;\n\n        this._x = x;\n        this._y = y;\n\n        this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n\n        this.trigger('pan', dx, dy, oldX, oldY, x, y);\n    }\n\n    function mouseup(e) {\n        if (!eventTool.notLeftMouse(e)) {\n            this._dragging = false;\n        }\n    }\n\n    function mousewheel(e) {\n        // wheelDelta maybe -0 in chrome mac.\n        if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n            return;\n        }\n\n        // Convenience:\n        // Mac and VM Windows on Mac: scroll up: zoom out.\n        // Windows: scroll up: zoom in.\n        var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n    }\n\n    function pinch(e) {\n        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n            return;\n        }\n        var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n    }\n\n    function zoom(e, zoomDelta, zoomX, zoomY) {\n        if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n            // When mouse is out of roamController rect,\n            // default befavoius should not be be disabled, otherwise\n            // page sliding is disabled, contrary to expectation.\n            eventTool.stop(e.event);\n\n            this.trigger('zoom', zoomDelta, zoomX, zoomY);\n        }\n    }\n\n    function checkKeyBinding(roamController, prop, e) {\n        var setting = roamController._opt[prop];\n        return setting\n            && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n    }\n\n    module.exports = RoamController;\n\n\n/***/ }),\n\n/***/ 1754:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    __webpack_require__(499).registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n/***/ }),\n\n/***/ 1755:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(1637);\n    var formatUtil = __webpack_require__(1631);\n    var graphic = __webpack_require__(1627);\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1756:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1757:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var Model = __webpack_require__(1633);\n\n    var LegendModel = __webpack_require__(499).extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n\n/***/ 1758:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var symbolCreator = __webpack_require__(1654);\n    var graphic = __webpack_require__(1627);\n    var listComponentHelper = __webpack_require__(1755);\n    var layoutUtil = __webpack_require__(1637);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = __webpack_require__(499).extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n/***/ }),\n\n/***/ 1759:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(499);\n    var zrUtil = __webpack_require__(1626);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n/***/ }),\n\n/***/ 1760:\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1761:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(1772);\n    __webpack_require__(1773);\n\n    __webpack_require__(1762);\n\n\n/***/ }),\n\n/***/ 1762:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var AxisBuilder = __webpack_require__(1660);\n    var zrUtil = __webpack_require__(1626);\n    var graphic = __webpack_require__(1627);\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisTickLabel', 'axisName'\n    ];\n\n    module.exports = __webpack_require__(499).extendComponentView({\n\n        type: 'radar',\n\n        render: function (radarModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            this._buildAxes(radarModel);\n            this._buildSplitLineAndArea(radarModel);\n        },\n\n        _buildAxes: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n                var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n                    position: [radar.cx, radar.cy],\n                    rotation: indicatorAxis.angle,\n                    labelDirection: -1,\n                    tickDirection: -1,\n                    nameDirection: 1\n                });\n                return axisBuilder;\n            });\n\n            zrUtil.each(axisBuilders, function (axisBuilder) {\n                zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n                this.group.add(axisBuilder.getGroup());\n            }, this);\n        },\n\n        _buildSplitLineAndArea: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            if (!indicatorAxes.length) {\n                return;\n            }\n            var shape = radarModel.get('shape');\n            var splitLineModel = radarModel.getModel('splitLine');\n            var splitAreaModel = radarModel.getModel('splitArea');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n\n            var showSplitLine = splitLineModel.get('show');\n            var showSplitArea = splitAreaModel.get('show');\n            var splitLineColors = lineStyleModel.get('color');\n            var splitAreaColors = areaStyleModel.get('color');\n\n            splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n            splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n\n            var splitLines = [];\n            var splitAreas = [];\n\n            function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n                var colorIndex = idx % areaOrLineColorList.length;\n                areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n                return colorIndex;\n            }\n\n            if (shape === 'circle') {\n                var ticksRadius = indicatorAxes[0].getTicksCoords();\n                var cx = radar.cx;\n                var cy = radar.cy;\n                for (var i = 0; i < ticksRadius.length; i++) {\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Circle({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r: ticksRadius[i]\n                            }\n                        }));\n                    }\n                    if (showSplitArea && i < ticksRadius.length - 1) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n                        splitAreas[colorIndex].push(new graphic.Ring({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r0: ticksRadius[i],\n                                r: ticksRadius[i + 1]\n                            }\n                        }));\n                    }\n                }\n            }\n            // Polyyon\n            else {\n                var realSplitNumber;\n                var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n                    var ticksCoords = indicatorAxis.getTicksCoords();\n                    realSplitNumber = realSplitNumber == null\n                        ? ticksCoords.length - 1\n                        : Math.min(ticksCoords.length - 1, realSplitNumber);\n                    return zrUtil.map(ticksCoords, function (tickCoord) {\n                        return radar.coordToPoint(tickCoord, idx);\n                    });\n                });\n\n                var prevPoints = [];\n                for (var i = 0; i <= realSplitNumber; i++) {\n                    var points = [];\n                    for (var j = 0; j < indicatorAxes.length; j++) {\n                        points.push(axesTicksPoints[j][i]);\n                    }\n                    // Close\n                    if (points[0]) {\n                        points.push(points[0].slice());\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.error('Can\\'t draw value axis ' + i);\n                        }\n                    }\n\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Polyline({\n                            shape: {\n                                points: points\n                            }\n                        }));\n                    }\n                    if (showSplitArea && prevPoints) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n                        splitAreas[colorIndex].push(new graphic.Polygon({\n                            shape: {\n                                points: points.concat(prevPoints)\n                            }\n                        }));\n                    }\n                    prevPoints = points.slice().reverse();\n                }\n            }\n\n            var lineStyle = lineStyleModel.getLineStyle();\n            var areaStyle = areaStyleModel.getAreaStyle();\n            // Add splitArea before splitLine\n            zrUtil.each(splitAreas, function (splitAreas, idx) {\n                this.group.add(graphic.mergePath(\n                    splitAreas, {\n                        style: zrUtil.defaults({\n                            stroke: 'none',\n                            fill: splitAreaColors[idx % splitAreaColors.length]\n                        }, areaStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n            zrUtil.each(splitLines, function (splitLines, idx) {\n                this.group.add(graphic.mergePath(\n                    splitLines, {\n                        style: zrUtil.defaults({\n                            fill: 'none',\n                            stroke: splitLineColors[idx % splitLineColors.length]\n                        }, lineStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1763:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n    var zrColor = __webpack_require__(1645);\n    var eventUtil = __webpack_require__(1641);\n    var formatUtil = __webpack_require__(1631);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(1634);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n\n/***/ 1764:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(499).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1765:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(1763);\n    var zrUtil = __webpack_require__(1626);\n    var formatUtil = __webpack_require__(1631);\n    var numberUtil = __webpack_require__(1628);\n    var graphic = __webpack_require__(1627);\n    var findPointFromSeries = __webpack_require__(1678);\n    var layoutUtil = __webpack_require__(1637);\n    var env = __webpack_require__(1634);\n    var Model = __webpack_require__(1633);\n    var globalListener = __webpack_require__(1679);\n    var axisHelper = __webpack_require__(1639);\n    var axisPointerViewHelper = __webpack_require__(1680);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(499).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n/***/ }),\n\n/***/ 1766:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(1682);\n    var zrUtil = __webpack_require__(1626);\n    var ComponentModel = __webpack_require__(1635);\n    var layout = __webpack_require__(1637);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n\n/***/ 1767:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var Axis = __webpack_require__(1665);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n\n/***/ 1768:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n\n/***/ 1769:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var Cartesian = __webpack_require__(1768);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n\n/***/ 1770:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(1683);\n\n    var ComponentModel = __webpack_require__(1635);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1771:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var Axis = __webpack_require__(1665);\n\n    function IndicatorAxis(dim, scale, radiusExtent) {\n        Axis.call(this, dim, scale, radiusExtent);\n\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = 'value';\n\n        this.angle = 0;\n\n        /**\n         * Indicator name\n         * @type {string}\n         */\n        this.name = '';\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.model;\n    }\n\n    zrUtil.inherits(IndicatorAxis, Axis);\n\n    module.exports = IndicatorAxis;\n\n\n/***/ }),\n\n/***/ 1772:\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO clockwise\n\n\n    var zrUtil = __webpack_require__(1626);\n    var IndicatorAxis = __webpack_require__(1771);\n    var IntervalScale = __webpack_require__(1652);\n    var numberUtil = __webpack_require__(1628);\n    var axisHelper = __webpack_require__(1639);\n\n    function Radar(radarModel, ecModel, api) {\n\n        this._model = radarModel;\n        /**\n         * Radar dimensions\n         * @type {Array.<string>}\n         */\n        this.dimensions = [];\n\n        this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n            var dim = 'indicator_' + idx;\n            var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n            indicatorAxis.name = indicatorModel.get('name');\n            // Inject model and axis\n            indicatorAxis.model = indicatorModel;\n            indicatorModel.axis = indicatorAxis;\n            this.dimensions.push(dim);\n            return indicatorAxis;\n        }, this);\n\n        this.resize(radarModel, api);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cx;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cy;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.r;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.startAngle;\n    }\n\n    Radar.prototype.getIndicatorAxes = function () {\n        return this._indicatorAxes;\n    };\n\n    Radar.prototype.dataToPoint = function (value, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n\n        return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n    };\n\n    Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n        var angle = indicatorAxis.angle;\n        var x = this.cx + coord * Math.cos(angle);\n        var y = this.cy - coord * Math.sin(angle);\n        return [x, y];\n    };\n\n    Radar.prototype.pointToData = function (pt) {\n        var dx = pt[0] - this.cx;\n        var dy = pt[1] - this.cy;\n        var radius = Math.sqrt(dx * dx + dy * dy);\n        dx /= radius;\n        dy /= radius;\n\n        var radian = Math.atan2(-dy, dx);\n\n        // Find the closest angle\n        // FIXME index can calculated directly\n        var minRadianDiff = Infinity;\n        var closestAxis;\n        var closestAxisIdx = -1;\n        for (var i = 0; i < this._indicatorAxes.length; i++) {\n            var indicatorAxis = this._indicatorAxes[i];\n            var diff = Math.abs(radian - indicatorAxis.angle);\n            if (diff < minRadianDiff) {\n                closestAxis = indicatorAxis;\n                closestAxisIdx = i;\n                minRadianDiff = diff;\n            }\n        }\n\n        return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n    };\n\n    Radar.prototype.resize = function (radarModel, api) {\n        var center = radarModel.get('center');\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        var viewSize = Math.min(viewWidth, viewHeight) / 2;\n        this.cx = numberUtil.parsePercent(center[0], viewWidth);\n        this.cy = numberUtil.parsePercent(center[1], viewHeight);\n\n        this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n\n        this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n\n        zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n            indicatorAxis.setExtent(0, this.r);\n            var angle = (this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length);\n            // Normalize to [-PI, PI]\n            angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n            indicatorAxis.angle = angle;\n        }, this);\n    };\n\n    Radar.prototype.update = function (ecModel, api) {\n        var indicatorAxes = this._indicatorAxes;\n        var radarModel = this._model;\n        zrUtil.each(indicatorAxes, function (indicatorAxis) {\n            indicatorAxis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n            if (radarSeries.get('coordinateSystem') !== 'radar'\n                || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel\n            ) {\n                return;\n            }\n            var data = radarSeries.getData();\n            zrUtil.each(indicatorAxes, function (indicatorAxis) {\n                indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n            });\n        }, this);\n\n        var splitNumber = radarModel.get('splitNumber');\n\n        function increaseInterval(interval) {\n            var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10));\n            // Increase interval\n            var f = interval / exp10;\n            if (f === 2) {\n                f = 5;\n            }\n            else { // f is 2 or 5\n                f *= 2;\n            }\n            return f * exp10;\n        }\n        // Force all the axis fixing the maxSplitNumber.\n        zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n            var rawExtent = axisHelper.getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n            axisHelper.niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n\n            var axisModel = indicatorAxis.model;\n            var scale = indicatorAxis.scale;\n            var fixedMin = axisModel.getMin();\n            var fixedMax = axisModel.getMax();\n            var interval = scale.getInterval();\n\n            if (fixedMin != null && fixedMax != null) {\n                // User set min, max, divide to get new interval\n                scale.setExtent(+fixedMin, +fixedMax);\n                scale.setInterval(\n                    (fixedMax - fixedMin) / splitNumber\n                );\n            }\n            else if (fixedMin != null) {\n                var max;\n                // User set min, expand extent on the other side\n                do {\n                    max = fixedMin + interval * splitNumber;\n                    scale.setExtent(+fixedMin, max);\n                    // Interval must been set after extent\n                    // FIXME\n                    scale.setInterval(interval);\n\n                    interval = increaseInterval(interval);\n                } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n            }\n            else if (fixedMax != null) {\n                var min;\n                // User set min, expand extent on the other side\n                do {\n                    min = fixedMax - interval * splitNumber;\n                    scale.setExtent(min, +fixedMax);\n                    scale.setInterval(interval);\n                    interval = increaseInterval(interval);\n                } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n            }\n            else {\n                var nicedSplitNumber = scale.getTicks().length - 1;\n                if (nicedSplitNumber > splitNumber) {\n                    interval = increaseInterval(interval);\n                }\n                // PENDING\n                var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n                var halfSplitNumber = Math.round(splitNumber / 2);\n                scale.setExtent(\n                    numberUtil.round(center - halfSplitNumber * interval),\n                    numberUtil.round(center + (splitNumber - halfSplitNumber) * interval)\n                );\n                scale.setInterval(interval);\n            }\n        });\n    };\n\n    /**\n     * Radar dimensions is based on the data\n     * @type {Array}\n     */\n    Radar.dimensions = [];\n\n    Radar.create = function (ecModel, api) {\n        var radarList = [];\n        ecModel.eachComponent('radar', function (radarModel) {\n            var radar = new Radar(radarModel, ecModel, api);\n            radarList.push(radar);\n            radarModel.coordinateSystem = radar;\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries) {\n            if (radarSeries.get('coordinateSystem') === 'radar') {\n                // Inject coordinate system\n                radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n            }\n        });\n        return radarList;\n    };\n\n    __webpack_require__(1646).register('radar', Radar);\n    module.exports = Radar;\n\n\n/***/ }),\n\n/***/ 1773:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var axisDefault = __webpack_require__(1682);\n    var valueAxisDefault = axisDefault.valueAxis;\n    var Model = __webpack_require__(1633);\n    var zrUtil = __webpack_require__(1626);\n\n    var axisModelCommonMixin = __webpack_require__(1666);\n\n    function defaultsShow(opt, show) {\n        return zrUtil.defaults({\n            show: show\n        }, opt);\n    }\n\n    var RadarModel = __webpack_require__(499).extendComponentModel({\n\n        type: 'radar',\n\n        optionUpdated: function () {\n            var boundaryGap = this.get('boundaryGap');\n            var splitNumber = this.get('splitNumber');\n            var scale = this.get('scale');\n            var axisLine = this.get('axisLine');\n            var axisTick = this.get('axisTick');\n            var axisLabel = this.get('axisLabel');\n            var nameTextStyle = this.get('name');\n            var showName = this.get('name.show');\n            var nameFormatter = this.get('name.formatter');\n            var nameGap = this.get('nameGap');\n            var triggerEvent = this.get('triggerEvent');\n\n            var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n                // PENDING\n                if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n                    indicatorOpt.min = 0;\n                }\n                else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n                    indicatorOpt.max = 0;\n                }\n                var iNameTextStyle = nameTextStyle;\n                if(indicatorOpt.color != null) {\n                    iNameTextStyle = zrUtil.defaults({color: indicatorOpt.color}, nameTextStyle);\n                }\n                // Use same configuration\n                indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n                    boundaryGap: boundaryGap,\n                    splitNumber: splitNumber,\n                    scale: scale,\n                    axisLine: axisLine,\n                    axisTick: axisTick,\n                    axisLabel: axisLabel,\n                    // Competitable with 2 and use text\n                    name: indicatorOpt.text,\n                    nameLocation: 'end',\n                    nameGap: nameGap,\n                    // min: 0,\n                    nameTextStyle: iNameTextStyle,\n                    triggerEvent: triggerEvent\n                }, false);\n                if (!showName) {\n                    indicatorOpt.name = '';\n                }\n                if (typeof nameFormatter === 'string') {\n                    var indName = indicatorOpt.name;\n                    indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n                }\n                else if (typeof nameFormatter === 'function') {\n                    indicatorOpt.name = nameFormatter(\n                        indicatorOpt.name, indicatorOpt\n                    );\n                }\n                var model = zrUtil.extend(\n                    new Model(indicatorOpt, null, this.ecModel),\n                    axisModelCommonMixin\n                );\n\n                // For triggerEvent.\n                model.mainType = 'radar';\n                model.componentIndex = this.componentIndex;\n\n                return model;\n            }, this);\n\n            this.getIndicatorModels = function () {\n                return indicatorModels;\n            };\n        },\n\n        defaultOption: {\n\n            zlevel: 0,\n\n            z: 0,\n\n            center: ['50%', '50%'],\n\n            radius: '75%',\n\n            startAngle: 90,\n\n            name: {\n                show: true\n                // formatter: null\n                // textStyle: {}\n            },\n\n            boundaryGap: [0, 0],\n\n            splitNumber: 5,\n\n            nameGap: 15,\n\n            scale: false,\n\n            // Polygon or circle\n            shape: 'polygon',\n\n            axisLine: zrUtil.merge(\n                {\n                    lineStyle: {\n                        color: '#bbb'\n                    }\n                },\n                valueAxisDefault.axisLine\n            ),\n            axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n            axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n            splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n            splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n\n            // {text, min, max}\n            indicator: []\n        }\n    });\n\n    module.exports = RadarModel;\n\n\n/***/ }),\n\n/***/ 1774:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n\n/***/ 1775:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(1659);\n    var symbolUtil = __webpack_require__(1654);\n    var axisHelper = __webpack_require__(1639);\n    var axisModelCommonMixin = __webpack_require__(1666);\n    var Model = __webpack_require__(1633);\n    var util = __webpack_require__(1626);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(1649),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1776:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var numberUtil = __webpack_require__(1628);\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                // See #6312, do not restrict width.\n                stacks[stackId].width = barWidth;\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coordDims = [\n                seriesModel.coordDimToDataDim('x')[0],\n                seriesModel.coordDimToDataDim('y')[0]\n            ];\n            var coords = data.mapArray(coordDims, function (x, y) {\n                return cartesian.dataToPoint([x, y]);\n            }, true);\n\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n\n/***/ 1777:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n\n/***/ 1778:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(1627);\n    var zrUtil = __webpack_require__(1626);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n\n/***/ 1779:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(1626);\n    var modelUtil = __webpack_require__(1629);\n    var Model = __webpack_require__(1633);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(1635);\n\n    var globalDefault = __webpack_require__(1781);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(1685));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n\n/***/ 1780:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var modelUtil = __webpack_require__(1629);\n    var ComponentModel = __webpack_require__(1635);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n\n/***/ 1781:\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n\n/***/ 1782:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(1651)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n\n/***/ 1783:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1784:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(1651)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1785:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(1651)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1786:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(1640);\n    var graphicUtil = __webpack_require__(1627);\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1787:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(1626);\n    var compatStyle = __webpack_require__(1788);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1788:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var modelUtil = __webpack_require__(1629);\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n        }\n\n        // mark point data\n        var markPoint = seriesOpt.markPoint;\n        if (markPoint && markPoint.data) {\n            var mpData = markPoint.data;\n            for (var i = 0; i < mpData.length; i++) {\n                compatItemStyle(mpData[i]);\n                compatLabelTextStyle(mpData[i] && mpData[i].label);\n            }\n        }\n        // mark line data\n        var markLine = seriesOpt.markLine;\n        if (markLine && markLine.data) {\n            var mlData = markLine.data;\n            for (var i = 0; i < mlData.length; i++) {\n                if (zrUtil.isArray(mlData[i])) {\n                    compatItemStyle(mlData[i][0]);\n                    compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                    compatItemStyle(mlData[i][1]);\n                    compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                }\n                else {\n                    compatItemStyle(mlData[i]);\n                    compatLabelTextStyle(mlData[i] && mlData[i].label);\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n/***/ }),\n\n/***/ 1789:\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ 1790:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(1626);\n    var Scale = __webpack_require__(1653);\n    var numberUtil = __webpack_require__(1628);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(1652);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n\n/***/ 1791:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(1626);\n    var Scale = __webpack_require__(1653);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n\n/***/ 1792:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(1626);\n    var numberUtil = __webpack_require__(1628);\n    var formatUtil = __webpack_require__(1631);\n    var scaleHelper = __webpack_require__(1687);\n\n    var IntervalScale = __webpack_require__(1652);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : (new Date(+extent[0] || +extent[1])).getTimezoneOffset() * 60 * 1000;\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n\n/***/ 1793:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(1671);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n\n/***/ 1803:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(1626);\n    var vec2 = __webpack_require__(1630);\n    var Draggable = __webpack_require__(1836);\n\n    var Eventful = __webpack_require__(1644);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch,\n            which: event.which\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downEl = hoveredTarget;\n                this._downPoint = [event.zrX, event.zrY];\n                // In case click triggered before mouseup\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downEl !== this._upEl\n                    // Original click event is triggered on the whole canvas element,\n                    // including the case that `mousedown` - `mousemove` - `mouseup`,\n                    // which should be filtered, otherwise it will bring trouble to\n                    // pan and zoom.\n                    || !this._downPoint\n                    // Arbitrary value\n                    || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4\n                ) {\n                    return;\n                }\n                this._downPoint = null;\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n\n/***/ 1804:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(1626);\n    var config = __webpack_require__(1656);\n    var Style = __webpack_require__(1700);\n    var Pattern = __webpack_require__(1699);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n\n/***/ 1805:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(1656);\n    var util = __webpack_require__(1626);\n    var log = __webpack_require__(1697);\n    var BoundingRect = __webpack_require__(1638);\n    var timsort = __webpack_require__(1669);\n\n    var Layer = __webpack_require__(1804);\n\n    var requestAnimationFrame = __webpack_require__(1693);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n\n        this.type = 'canvas';\n\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        getType: function () {\n            return 'canvas';\n        },\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(1698);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n\n/***/ 1806:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(1626);\n    var env = __webpack_require__(1634);\n\n    var Group = __webpack_require__(1657);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(1669);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n\n/***/ 1807:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(1626);\n    var Dispatcher = __webpack_require__(1641).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(1693);\n\n    var Animator = __webpack_require__(1692);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n\n/***/ 1808:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(1809);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n\n/***/ 1809:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n\n/***/ 1810:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(1694).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1811:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(1642);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1812:\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1813:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(1658).CMD;\n    var line = __webpack_require__(1812);\n    var cubic = __webpack_require__(1811);\n    var quadratic = __webpack_require__(1814);\n    var arc = __webpack_require__(1810);\n    var normalizeRadian = __webpack_require__(1694).normalizeRadian;\n    var curve = __webpack_require__(1642);\n\n    var windingLine = __webpack_require__(1815);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1814:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(1642);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1815:\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n\n/***/ 1816:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(1641);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n\n/***/ 1817:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(1630);\n    var curve = __webpack_require__(1642);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n\n/***/ 1818:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(1641);\n    var zrUtil = __webpack_require__(1626);\n    var Eventful = __webpack_require__(1644);\n    var env = __webpack_require__(1634);\n    var GestureMgr = __webpack_require__(1816);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n\n/***/ 1819:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(1632);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1820:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var Gradient = __webpack_require__(1671);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n\n/***/ 1821:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    var Gradient = __webpack_require__(1671);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n\n/***/ 1822:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(1670);\n    var zrUtil = __webpack_require__(1626);\n    var textContain = __webpack_require__(1640);\n    var textHelper = __webpack_require__(1704);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n                    var w = style.textStrokeWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n\n/***/ 1823:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(1630);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n\n/***/ 1824:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(1630);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n\n/***/ 1825:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = __webpack_require__(1704);\n    var BoundingRect = __webpack_require__(1638);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n\n/***/ 1826:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(1632).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1827:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(1642);\n    var vec2 = __webpack_require__(1630);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(1632).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1828:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(1632).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1829:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(1632).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1830:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(1702);\n\n    module.exports = __webpack_require__(1632).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1831:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(1702);\n\n    module.exports = __webpack_require__(1632).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1832:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(1703);\n\n    module.exports = __webpack_require__(1632).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1833:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(1632).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1834:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = __webpack_require__(1632);\n    var fixClipWithShadow = __webpack_require__(1701);\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1835:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(1692);\n    var util = __webpack_require__(1626);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(1697);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n\n/***/ 1836:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n\n/***/ 1837:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(1632);\n    var PathProxy = __webpack_require__(1658);\n    var transformPath = __webpack_require__(1838);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1838:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(1658).CMD;\n    var vec2 = __webpack_require__(1630);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n\n/***/ 1839:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(1696);\n    var env = __webpack_require__(1634);\n    var zrUtil = __webpack_require__(1626);\n\n    var Handler = __webpack_require__(1803);\n    var Storage = __webpack_require__(1806);\n    var Animation = __webpack_require__(1807);\n    var HandlerProxy = __webpack_require__(1818);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(1805)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.3';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n\n/***/ 499:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(1634);\n\n    var GlobalModel = __webpack_require__(1779);\n    var ExtensionAPI = __webpack_require__(1717);\n    var CoordinateSystemManager = __webpack_require__(1646);\n    var OptionManager = __webpack_require__(1780);\n    var backwardCompat = __webpack_require__(1787);\n\n    var ComponentModel = __webpack_require__(1635);\n    var SeriesModel = __webpack_require__(1650);\n\n    var ComponentView = __webpack_require__(1688);\n    var ChartView = __webpack_require__(1668);\n    var graphic = __webpack_require__(1627);\n    var modelUtil = __webpack_require__(1629);\n    var throttle = __webpack_require__(1655);\n\n    var zrender = __webpack_require__(1839);\n    var zrUtil = __webpack_require__(1626);\n    var colorTool = __webpack_require__(1645);\n    var Eventful = __webpack_require__(1644);\n    var timsort = __webpack_require__(1669);\n\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.2',\n        dependencies: {\n            zrender: '3.6.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(1793));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', __webpack_require__(1778));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(1648);\n    echarts.Model = __webpack_require__(1633);\n\n    echarts.Axis = __webpack_require__(1665);\n\n    echarts.graphic = __webpack_require__(1627);\n    echarts.number = __webpack_require__(1628);\n    echarts.format = __webpack_require__(1631);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(1643);\n    echarts.vector = __webpack_require__(1630);\n    echarts.color = __webpack_require__(1645);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(1775);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(207)))\n\n/***/ }),\n\n/***/ 501:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n\n    __webpack_require__(1684);\n\n    __webpack_require__(1719);\n    __webpack_require__(1720);\n\n    var barLayoutGrid = __webpack_require__(1776);\n    var echarts = __webpack_require__(499);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(1664);\n\n\n/***/ }),\n\n/***/ 502:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var echarts = __webpack_require__(499);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(1726);\n    __webpack_require__(1727);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(1690), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(1777), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(1789), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(1664);\n\n\n/***/ }),\n\n/***/ 503:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var echarts = __webpack_require__(499);\n\n    __webpack_require__(1730);\n    __webpack_require__(1731);\n\n    __webpack_require__(1718)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(1689), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(1733), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(1686), 'pie'));\n\n\n/***/ }),\n\n/***/ 504:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(1626);\n    var echarts = __webpack_require__(499);\n\n    // Must use radar component\n    __webpack_require__(1761);\n\n    __webpack_require__(1734);\n    __webpack_require__(1735);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(1689), 'radar'));\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(1690), 'radar', 'circle', null\n    ));\n    echarts.registerLayout(__webpack_require__(1737));\n\n    echarts.registerProcessor(\n        zrUtil.curry(__webpack_require__(1686), 'radar')\n    );\n\n    echarts.registerPreprocessor(__webpack_require__(1736));\n\n\n/***/ }),\n\n/***/ 505:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(1752);\n\n    __webpack_require__(1661);\n    __webpack_require__(1662);\n\n    __webpack_require__(1747);\n    __webpack_require__(1748);\n\n    __webpack_require__(1745);\n    __webpack_require__(1746);\n\n    __webpack_require__(1750);\n    __webpack_require__(1749);\n\n\n\n/***/ }),\n\n/***/ 506:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(1664);\n\n    __webpack_require__(1677);\n\n    __webpack_require__(1676);\n\n\n\n/***/ }),\n\n/***/ 507:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    __webpack_require__(1757);\n    __webpack_require__(1759);\n    __webpack_require__(1758);\n\n    var echarts = __webpack_require__(499);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(1760));\n\n    __webpack_require__(1635).registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n/***/ }),\n\n/***/ 508:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var echarts = __webpack_require__(499);\n    var graphic = __webpack_require__(1627);\n    var layout = __webpack_require__(1637);\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: titleModel.get('text'),\n                    textFill: textStyleModel.getTextColor()\n                }, {disableBox: true}),\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: graphic.setTextStyle({}, subtextStyleModel, {\n                    text: subText,\n                    textFill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textVerticalAlign: 'top'\n                }, {disableBox: true}),\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2],\n                    r: titleModel.get('borderRadius')\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 509:\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(1676);\n\n    __webpack_require__(1764);\n\n    __webpack_require__(1765);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(499).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(499).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// echarts.4cf47ef5e5a495a66011.js","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 1626\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textStrokeWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textStrokeWidth: textStyle.textStrokeWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textStrokeWidth = insideRollback.textStrokeWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 1627\n// module chunks = 1","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * Consider DST, it is incorrect to provide a method `getTimezoneOffset`\n     * without time specified. So this method is removed.\n     *\n     * @return {number} in minutes\n     */\n    // number.getTimezoneOffset = function () {\n    //     return (new Date()).getTimezoneOffset();\n    // };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            // Use local time when no timezone offset specifed.\n            if (!match[8]) {\n                // match[n] can only be string or undefined.\n                // But take care of '12' + 1 => '121'.\n                return new Date(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    +match[4] || 0,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                );\n            }\n            // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n            // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n            // For example, system timezone is set as \"Time Zone: America/Toronto\",\n            // then these code will get different result:\n            // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n            // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n            // So we should not use `new Date`, but use `Date.UTC`.\n            else {\n                var hour = +match[4] || 0;\n                if (match[8].toUpperCase() !== 'Z') {\n                    hour -= match[8].slice(0, 3);\n                }\n                return new Date(Date.UTC(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    hour,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                ));\n            }\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 1628\n// module chunks = 1","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 1629\n// module chunks = 1","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 1630\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 1631\n// module chunks = 1","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 1632\n// module chunks = 1","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 1633\n// module chunks = 1","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 1634\n// module chunks = 1","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 1635\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 1636\n// module chunks = 1","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 1637\n// module chunks = 1","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 1638\n// module chunks = 1","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 1639\n// module chunks = 1","\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var imageHelper = require('../graphic/helper/image');\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 1640\n// module chunks = 1","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    var MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n        // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n        // If e.which has been defined, if may be readonly,\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n        var button = e.button;\n        if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n            e.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    function notLeftMouse(e) {\n        // If e.which is undefined, considered as left mouse event.\n        return e.which > 1;\n    }\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n        notLeftMouse: notLeftMouse,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 1641\n// module chunks = 1","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 1642\n// module chunks = 1","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 1643\n// module chunks = 1","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 1644\n// module chunks = 1","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerpNumber(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than lerp methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastLerp(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function lerp(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastLerp: fastLerp,\n        fastMapToColor: fastLerp, // Deprecated\n        lerp: lerp,\n        mapToColor: lerp, // Deprecated\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 1645\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 1646\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1647\n// module chunks = 1","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 1648\n// module chunks = 1","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 1649\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 1650\n// module chunks = 1","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1651\n// module chunks = 1","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 1652\n// module chunks = 1","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 1653\n// module chunks = 1","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 1654\n// module chunks = 1","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 1655\n// module chunks = 1","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 1656\n// module chunks = 1","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 1657\n// module chunks = 1","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 1658\n// module chunks = 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1659\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTickLabel: function () {\n            var axisModel = this.axisModel;\n            var opt = this.opt;\n\n            var tickEls = buildAxisTick(this, axisModel, opt);\n            var labelEls = buildAxisLabel(this, axisModel, opt);\n\n            fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (isNameLocationCenter(nameLocation)) {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        // FIXME\n        // Have not consider onBand yet, where tick els is more than label els.\n\n        labelEls = labelEls || [];\n        tickEls = tickEls || [];\n\n        var firstLabel = labelEls[0];\n        var nextLabel = labelEls[1];\n        var lastLabel = labelEls[labelEls.length - 1];\n        var prevLabel = labelEls[labelEls.length - 2];\n\n        var firstTick = tickEls[0];\n        var nextTick = tickEls[1];\n        var lastTick = tickEls[tickEls.length - 1];\n        var prevTick = tickEls[tickEls.length - 2];\n\n        if (showMinLabel === false) {\n            ignoreEl(firstLabel);\n            ignoreEl(firstTick);\n        }\n        else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            if (showMinLabel) {\n                ignoreEl(nextLabel);\n                ignoreEl(nextTick);\n            }\n            else {\n                ignoreEl(firstLabel);\n                ignoreEl(firstTick);\n            }\n        }\n\n        if (showMaxLabel === false) {\n            ignoreEl(lastLabel);\n            ignoreEl(lastTick);\n        }\n        else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            if (showMaxLabel) {\n                ignoreEl(prevLabel);\n                ignoreEl(prevTick);\n            }\n            else {\n                ignoreEl(lastLabel);\n                ignoreEl(lastTick);\n            }\n        }\n    }\n\n    function ignoreEl(el) {\n        el && (el.ignore = true);\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n    function isNameLocationCenter(nameLocation) {\n        return nameLocation === 'middle' || nameLocation === 'center';\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (\n        axis,\n        i,\n        interval,\n        ticksCnt,\n        showMinLabel,\n        showMaxLabel\n    ) {\n        if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n            return false;\n        }\n\n        // FIXME\n        // Have not consider label overlap (if label is too long) yet.\n\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    function buildAxisTick(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n\n        if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n            return;\n        }\n\n        var tickModel = axisModel.getModel('axisTick');\n\n        var lineStyleModel = tickModel.getModel('lineStyle');\n        var tickLen = tickModel.get('length');\n\n        var tickInterval = getInterval(tickModel, opt.labelInterval);\n        var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n        // FIXME\n        // Corresponds to ticksCoords ?\n        var ticks = axis.scale.getTicks();\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        var pt1 = [];\n        var pt2 = [];\n        var matrix = axisBuilder._transform;\n\n        var tickEls = [];\n\n        var ticksCnt = ticksCoords.length;\n        for (var i = 0; i < ticksCnt; i++) {\n            // Only ordinal scale support tick interval\n            if (ifIgnoreOnTick(\n                axis, i, tickInterval, ticksCnt,\n                showMinLabel, showMaxLabel\n            )) {\n                continue;\n            }\n\n            var tickCoord = ticksCoords[i];\n\n            pt1[0] = tickCoord;\n            pt1[1] = 0;\n            pt2[0] = tickCoord;\n            pt2[1] = opt.tickDirection * tickLen;\n\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n            // Tick line, Not use group transform to have better line draw\n            var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n                // Id for animation\n                anid: 'tick_' + ticks[i],\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.defaults(\n                    lineStyleModel.getLineStyle(),\n                    {\n                        stroke: axisModel.get('axisLine.lineStyle.color')\n                    }\n                ),\n                z2: 2,\n                silent: true\n            }));\n            axisBuilder.group.add(tickEl);\n            tickEls.push(tickEl);\n        }\n\n        return tickEls;\n    }\n\n    function buildAxisLabel(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n        var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n        if (!show || axis.scale.isBlank()) {\n            return;\n        }\n\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelMargin = labelModel.get('margin');\n        var ticks = axis.scale.getTicks();\n        var labels = axisModel.getFormattedLabels();\n\n        // Special label rotate.\n        var labelRotation = (\n            retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n        ) * PI / 180;\n\n        var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n        var categoryData = axisModel.get('data');\n\n        var labelEls = [];\n        var silent = isSilent(axisModel);\n        var triggerEvent = axisModel.get('triggerEvent');\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        zrUtil.each(ticks, function (tickVal, index) {\n            if (ifIgnoreOnTick(\n                axis, index, opt.labelInterval, ticks.length,\n                showMinLabel, showMaxLabel\n            )) {\n                    return;\n            }\n\n            var itemLabelModel = labelModel;\n            if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                itemLabelModel = new Model(\n                    categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                );\n            }\n\n            var textColor = itemLabelModel.getTextColor()\n                || axisModel.get('axisLine.lineStyle.color');\n\n            var tickCoord = axis.dataToCoord(tickVal);\n            var pos = [\n                tickCoord,\n                opt.labelOffset + opt.labelDirection * labelMargin\n            ];\n            var labelStr = axis.scale.getLabel(tickVal);\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'label_' + tickVal,\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: silent,\n                z2: 10\n            });\n\n            graphic.setTextStyle(textEl.style, itemLabelModel, {\n                text: labels[index],\n                textAlign: itemLabelModel.getShallow('align', true)\n                    || labelLayout.textAlign,\n                textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                    || itemLabelModel.getShallow('baseline', true)\n                    || labelLayout.textVerticalAlign,\n                textFill: typeof textColor === 'function'\n                    ? textColor(\n                        // (1) In category axis with data zoom, tick is not the original\n                        // index of axis.data. So tick should not be exposed to user\n                        // in category axis.\n                        // (2) Compatible with previous version, which always returns labelStr.\n                        // But in interval scale labelStr is like '223,445', which maked\n                        // user repalce ','. So we modify it to return original val but remain\n                        // it as 'string' to avoid error in replacing.\n                        axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                        index\n                    )\n                    : textColor\n            });\n\n            // Pack data for mouse event\n            if (triggerEvent) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisLabel';\n                textEl.eventData.value = labelStr;\n            }\n\n            // FIXME\n            axisBuilder._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            labelEls.push(textEl);\n            axisBuilder.group.add(textEl);\n\n            textEl.decomposeTransform();\n\n        });\n\n        return labelEls;\n    }\n\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1660\n// module chunks = 1","/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var echarts = require('../../echarts');\n    var modelUtil = require('../../util/model');\n    var helper = require('./helper');\n    var AxisProxy = require('./AxisProxy');\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null,     // The range of dataZoom can not be larger than that.\n            rangeMode: null         // Array, can be 'value' or 'percent'.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        var rangePropMode = dataZoomModel._rangePropMode;\n        var rangeModeInOption = dataZoomModel.get('rangeMode');\n\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var percentSpecified = rawOption[names[0]] != null;\n            var valueSpecified = rawOption[names[1]] != null;\n            if (percentSpecified && !valueSpecified) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (!percentSpecified && valueSpecified) {\n                rangePropMode[index] = 'value';\n            }\n            else if (rangeModeInOption) {\n                rangePropMode[index] = rangeModeInOption[index];\n            }\n            else if (percentSpecified) { // percentSpecified && valueSpecified\n                rangePropMode[index] = 'percent';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 1661\n// module chunks = 1","\n\n    var ComponentView = require('../../view/Component');\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 1662\n// module chunks = 1","\n    var formatUtil = require('../../util/format');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/helper.js\n// module id = 1663\n// module chunks = 1","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 1664\n// module chunks = 1","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 1665\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1666\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 1667\n// module chunks = 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 1668\n// module chunks = 1","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 1669\n// module chunks = 1","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 1670\n// module chunks = 1","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 1671\n// module chunks = 1","\n\n    var LRU = require('../../core/LRU');\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 1672\n// module chunks = 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setLabelStyle(\n                elStyle, hoverItemStyle, labelModel, hoverLabelModel,\n                {\n                    labelFetcher: seriesModel,\n                    labelDataIndex: idx,\n                    defaultText: data.get(valueDim, idx),\n                    isRectText: true,\n                    autoColor: color\n                }\n            );\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        // FIXME\n        // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 1673\n// module chunks = 1","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 1674\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1675\n// module chunks = 1","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 1676\n// module chunks = 1","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1677\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1678\n// module chunks = 1","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1679\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1680\n// module chunks = 1","\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/sliderMove.js\n// module id = 1681\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 1682\n// module chunks = 1","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 1683\n// module chunks = 1","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 1684\n// module chunks = 1","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 1685\n// module chunks = 1","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataFilter.js\n// module id = 1686\n// module chunks = 1","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 1687\n// module chunks = 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 1688\n// module chunks = 1","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/dataColor.js\n// module id = 1689\n// module chunks = 1","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 1690\n// module chunks = 1","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 1691\n// module chunks = 1","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 1692\n// module chunks = 1","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1693\n// module chunks = 1","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 1694\n// module chunks = 1","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 1695\n// module chunks = 1","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 1696\n// module chunks = 1","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 1697\n// module chunks = 1","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n    var imageHelper = require('./helper/image');\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 1698\n// module chunks = 1","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 1699\n// module chunks = 1","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textStrokeWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textStrokeWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 1700\n// module chunks = 1","\n\n    var env = require('../../core/env');\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1701\n// module chunks = 1","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 1702\n// module chunks = 1","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 1703\n// module chunks = 1","\n\n    var textContain = require('../../contain/text');\n    var util = require('../../core/util');\n    var roundRectHelper = require('./roundRect');\n    var imageHelper = require('./image');\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textStrokeWidth = style.textStrokeWidth;\n        var textStroke = getStroke(style.textStroke, textStrokeWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            // ctx[prop] = ctx.__currentValues[prop] = value;\n        ctx[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 1704\n// module chunks = 1","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 1705\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 1717\n// module chunks = 1","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/action/createDataSelectAction.js\n// module id = 1718\n// module chunks = 1","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 1719\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 1720\n// module chunks = 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                // normal: {\n                    // color: '各异'\n                // },\n                // emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 1721\n// module chunks = 1","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 1722\n// module chunks = 1","\n\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        graphic.setLabelStyle(\n            normalStyle, hoverStyle, labelModel, hoverLabelModel,\n            {\n                labelFetcher: seriesModel,\n                labelDataIndex: dataIndex,\n                defaultText: seriesModel.getRawValue(dataIndex),\n                isRectText: true,\n                autoColor: color\n            }\n        );\n\n        fixPosition(normalStyle);\n        fixPosition(hoverStyle);\n    };\n\n    function fixPosition(style, labelPositionOutside) {\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 1723\n// module chunks = 1","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 1724\n// module chunks = 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 1725\n// module chunks = 1","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 1726\n// module chunks = 1","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n\n        var valueStart = 0;\n        if (!baseAxis.onZero) {\n            var extent = valueAxis.scale.getExtent();\n            if (extent[0] > 0) {\n                // Both positive\n                valueStart = extent[0];\n            }\n            else if (extent[1] < 0) {\n                // Both negative\n                valueStart = extent[1];\n            }\n            // If is one positive, and one negative, onZero shall be true\n        }\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 1727\n// module chunks = 1","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 1728\n// module chunks = 1","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n    var fixClipWithShadow = require('zrender/lib/graphic/helper/fixClipWithShadow');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 1729\n// module chunks = 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var numberUtil = require('../../util/number');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中时扇区偏移量\n            selectedOffset: 10,\n            // 高亮扇区偏移量\n            hoverOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieSeries.js\n// module id = 1730\n// module chunks = 1","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + seriesModel.get('hoverOffset')\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setLabelStyle(\n            labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel,\n            {\n                labelFetcher: data.hostModel,\n                labelDataIndex: idx,\n                defaultText: data.getName(idx),\n                autoColor: visualColor,\n                useInsideStyle: !!labelLayout.inside\n            },\n            {\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.verticalAlign,\n                opacity: data.getItemVisual(idx, 'opacity')\n            }\n        );\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieView.js\n// module id = 1731\n// module chunks = 1","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/labelLayout.js\n// module id = 1732\n// module chunks = 1","\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/pieLayout.js\n// module id = 1733\n// module chunks = 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var encodeHTML = require('../../util/format').encodeHTML;\n\n    var RadarSeries = SeriesModel.extend({\n\n        type: 'series.radar',\n\n        dependencies: ['radar'],\n\n\n        // Overwrite\n        init: function (option) {\n            RadarSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n        },\n\n        getInitialData: function (option, ecModel) {\n            var data = option.data || [];\n            var dimensions = completeDimensions(\n                [], data, {extraPrefix: 'indicator_', extraFromZero: true}\n            );\n            var list = new List(dimensions, this);\n            list.initData(data);\n            return list;\n        },\n\n        formatTooltip: function (dataIndex) {\n            var value = this.getRawValue(dataIndex);\n            var coordSys = this.coordinateSystem;\n            var indicatorAxes = coordSys.getIndicatorAxes();\n            var name = this.getData().getName(dataIndex);\n            return encodeHTML(name === '' ? this.name : name) + '<br/>'\n                + zrUtil.map(indicatorAxes, function (axis, idx) {\n                    return encodeHTML(axis.name + ' : ' + value[idx]);\n                }).join('<br />');\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            coordinateSystem: 'radar',\n            legendHoverLink: true,\n            radarIndex: 0,\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // areaStyle: {\n            // },\n            // itemStyle: {}\n            symbol: 'emptyCircle',\n            symbolSize: 4\n            // symbolRotate: null\n        }\n    });\n\n    module.exports = RadarSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/RadarSeries.js\n// module id = 1734\n// module chunks = 1","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n\n    function normalizeSymbolSize(symbolSize) {\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [+symbolSize, +symbolSize];\n        }\n        return symbolSize;\n    }\n    module.exports = require('../../echarts').extendChartView({\n        type: 'radar',\n\n        render: function (seriesModel, ecModel, api) {\n            var polar = seriesModel.coordinateSystem;\n            var group = this.group;\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            function createSymbol(data, idx) {\n                var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n                var color = data.getItemVisual(idx, 'color');\n                if (symbolType === 'none') {\n                    return;\n                }\n                var symbolSize = normalizeSymbolSize(\n                    data.getItemVisual(idx, 'symbolSize')\n                );\n                var symbolPath = symbolUtil.createSymbol(\n                    symbolType, -1, -1, 2, 2, color\n                );\n                symbolPath.attr({\n                    style: {\n                        strokeNoScale: true\n                    },\n                    z2: 100,\n                    scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n                });\n                return symbolPath;\n            }\n\n            function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n                // Simply rerender all\n                symbolGroup.removeAll();\n                for (var i = 0; i < newPoints.length - 1; i++) {\n                    var symbolPath = createSymbol(data, idx);\n                    if (symbolPath) {\n                        symbolPath.__dimIdx = i;\n                        if (oldPoints[i]) {\n                            symbolPath.attr('position', oldPoints[i]);\n                            graphic[isInit ? 'initProps' : 'updateProps'](\n                                symbolPath, {\n                                    position: newPoints[i]\n                                }, seriesModel, idx\n                            );\n                        }\n                        else {\n                            symbolPath.attr('position', newPoints[i]);\n                        }\n                        symbolGroup.add(symbolPath);\n                    }\n                }\n            }\n\n            function getInitialPoints(points) {\n                return zrUtil.map(points, function (pt) {\n                    return [polar.cx, polar.cy];\n                });\n            }\n            data.diff(oldData)\n                .add(function (idx) {\n                    var points = data.getItemLayout(idx);\n                    if (!points) {\n                        return;\n                    }\n                    var polygon = new graphic.Polygon();\n                    var polyline = new graphic.Polyline();\n                    var target = {\n                        shape: {\n                            points: points\n                        }\n                    };\n                    polygon.shape.points = getInitialPoints(points);\n                    polyline.shape.points = getInitialPoints(points);\n                    graphic.initProps(polygon, target, seriesModel, idx);\n                    graphic.initProps(polyline, target, seriesModel, idx);\n\n                    var itemGroup = new graphic.Group();\n                    var symbolGroup = new graphic.Group();\n                    itemGroup.add(polyline);\n                    itemGroup.add(polygon);\n                    itemGroup.add(symbolGroup);\n\n                    updateSymbols(\n                        polyline.shape.points, points, symbolGroup, data, idx, true\n                    );\n\n                    data.setItemGraphicEl(idx, itemGroup);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var itemGroup = oldData.getItemGraphicEl(oldIdx);\n                    var polyline = itemGroup.childAt(0);\n                    var polygon = itemGroup.childAt(1);\n                    var symbolGroup = itemGroup.childAt(2);\n                    var target = {\n                        shape: {\n                            points: data.getItemLayout(newIdx)\n                        }\n                    };\n                    if (!target.shape.points) {\n                        return;\n                    }\n                    updateSymbols(\n                        polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false\n                    );\n\n                    graphic.updateProps(polyline, target, seriesModel);\n                    graphic.updateProps(polygon, target, seriesModel);\n\n                    data.setItemGraphicEl(newIdx, itemGroup);\n                })\n                .remove(function (idx) {\n                    group.remove(oldData.getItemGraphicEl(idx));\n                })\n                .execute();\n\n            data.eachItemGraphicEl(function (itemGroup, idx) {\n                var itemModel = data.getItemModel(idx);\n                var polyline = itemGroup.childAt(0);\n                var polygon = itemGroup.childAt(1);\n                var symbolGroup = itemGroup.childAt(2);\n                var color = data.getItemVisual(idx, 'color');\n\n                group.add(itemGroup);\n\n                polyline.useStyle(\n                    zrUtil.defaults(\n                        itemModel.getModel('lineStyle.normal').getLineStyle(),\n                        {\n                            fill: 'none',\n                            stroke: color\n                        }\n                    )\n                );\n                polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n                var areaStyleModel = itemModel.getModel('areaStyle.normal');\n                var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n                var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n                var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n\n                hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n                polygon.ignore = polygonIgnore;\n\n                polygon.useStyle(\n                    zrUtil.defaults(\n                        areaStyleModel.getAreaStyle(),\n                        {\n                            fill: color,\n                            opacity: 0.7\n                        }\n                    )\n                );\n                polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n\n                var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n                var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n                var labelModel = itemModel.getModel('label.normal');\n                var labelHoverModel = itemModel.getModel('label.emphasis');\n                symbolGroup.eachChild(function (symbolPath) {\n                    symbolPath.setStyle(itemStyle);\n                    symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n\n                    graphic.setLabelStyle(\n                        symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel,\n                        {\n                            labelFetcher: data.hostModel,\n                            labelDataIndex: idx,\n                            labelDimIndex: symbolPath.__dimIdx,\n                            defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n                            autoColor: color,\n                            isRectText: true\n                        }\n                    );\n                });\n\n                function onEmphasis() {\n                    polygon.attr('ignore', hoverPolygonIgnore);\n                }\n\n                function onNormal() {\n                    polygon.attr('ignore', polygonIgnore);\n                }\n\n                itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n                itemGroup.on('emphasis', onEmphasis)\n                    .on('mouseover', onEmphasis)\n                    .on('normal', onNormal)\n                    .on('mouseout', onNormal);\n\n                graphic.setHoverStyle(itemGroup);\n            });\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/RadarView.js\n// module id = 1735\n// module chunks = 1","// Backward compat for radar chart in 2\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (option) {\n        var polarOptArr = option.polar;\n        if (polarOptArr) {\n            if (!zrUtil.isArray(polarOptArr)) {\n                polarOptArr = [polarOptArr];\n            }\n            var polarNotRadar = [];\n            zrUtil.each(polarOptArr, function (polarOpt, idx) {\n                if (polarOpt.indicator) {\n                    if (polarOpt.type && !polarOpt.shape) {\n                        polarOpt.shape = polarOpt.type;\n                    }\n                    option.radar = option.radar || [];\n                    if (!zrUtil.isArray(option.radar)) {\n                        option.radar = [option.radar];\n                    }\n                    option.radar.push(polarOpt);\n                }\n                else {\n                    polarNotRadar.push(polarOpt);\n                }\n            });\n            option.polar = polarNotRadar;\n        }\n        zrUtil.each(option.series, function (seriesOpt) {\n            if (seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n                seriesOpt.radarIndex = seriesOpt.polarIndex;\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/backwardCompat.js\n// module id = 1736\n// module chunks = 1","\n\n    module.exports = function (ecModel) {\n        ecModel.eachSeriesByType('radar', function (seriesModel) {\n            var data = seriesModel.getData();\n            var points = [];\n            var coordSys = seriesModel.coordinateSystem;\n            if (!coordSys) {\n                return;\n            }\n\n            function pointsConverter(val, idx) {\n                points[idx] = points[idx] || [];\n                points[idx][i] = coordSys.dataToPoint(val, i);\n            }\n            for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n                var dim = data.dimensions[i];\n                data.each(dim, pointsConverter);\n            }\n\n            data.each(function (idx) {\n                // Close polygon\n                points[idx][0] && points[idx].push(points[idx][0].slice());\n                data.setItemLayout(idx, points[idx]);\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/radarLayout.js\n// module id = 1737\n// module chunks = 1","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 1738\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisTickLabel', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n            var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(\n                    axis, i, lineInterval, ticksCoords.length,\n                    showMinLabel, showMaxLabel\n                )) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n            var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(\n                    axis, i, areaInterval, ticksCoords.length,\n                    showMinLabel, showMaxLabel\n                )) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 1739\n// module chunks = 1","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1740\n// module chunks = 1","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1741\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1742\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1743\n// module chunks = 1","/**\n * @file Axis operator\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var helper = require('./helper');\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        precision = Math.min(precision, 20);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 1744\n// module chunks = 1","/**\n * @file Data zoom model\n */\n\n\n    module.exports = require('./DataZoomModel').extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            disabled: false,   // Whether disable this inside zoom.\n            zoomLock: false,   // Whether disable zoom but only pan.\n            zoomOnMouseWheel: true, // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n            moveOnMouseMove: true,   // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n            preventDefaultMouseMove: true\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/InsideZoomModel.js\n// module id = 1745\n// module chunks = 1","\n\n    var DataZoomView = require('./DataZoomView');\n    var zrUtil = require('zrender/lib/core/util');\n    var sliderMove = require('../helper/sliderMove');\n    var roams = require('./roams');\n    var bind = zrUtil.bind;\n\n    var InsideZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @override\n         */\n        init: function (ecModel, api) {\n            /**\n             * 'throttle' is used in this.dispatchAction, so we save range\n             * to avoid missing some 'pan' info.\n             * @private\n             * @type {Array.<number>}\n             */\n            this._range;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            InsideZoomView.superApply(this, 'render', arguments);\n\n            // Notice: origin this._range should be maintained, and should not be re-fetched\n            // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n            // info will be missed because of 'throttle' of this.dispatchAction.\n            if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n                this._range = dataZoomModel.getPercentRange();\n            }\n\n            // Reset controllers.\n            zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n\n                var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n                    return roams.generateCoordId(coordInfo.model);\n                });\n\n                zrUtil.each(coordInfoList, function (coordInfo) {\n                    var coordModel = coordInfo.model;\n                    var dataZoomOption = dataZoomModel.option;\n\n                    roams.register(\n                        api,\n                        {\n                            coordId: roams.generateCoordId(coordModel),\n                            allCoordIds: allCoordIds,\n                            containsPoint: function (e, x, y) {\n                                return coordModel.coordinateSystem.containPoint([x, y]);\n                            },\n                            dataZoomId: dataZoomModel.id,\n                            throttleRate: dataZoomModel.get('throttle', true),\n                            panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n                            zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n                            zoomLock: dataZoomOption.zoomLock,\n                            disabled: dataZoomOption.disabled,\n                            roamControllerOpt: {\n                                zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n                                moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n                                preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n                            }\n                        }\n                    );\n                }, this);\n\n            }, this);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            roams.unregister(this.api, this.dataZoomModel.id);\n            InsideZoomView.superApply(this, 'dispose', arguments);\n            this._range = null;\n        },\n\n        /**\n         * @private\n         */\n        _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                [oldX, oldY], [newX, newY], axisModel, controller, coordInfo\n            );\n\n            var percentDelta = directionInfo.signal\n                * (range[1] - range[0])\n                * directionInfo.pixel / directionInfo.pixelLength;\n\n            sliderMove(percentDelta, range, [0, 100], 'all');\n\n            return (this._range = range);\n        },\n\n        /**\n         * @private\n         */\n        _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                null, [mouseX, mouseY], axisModel, controller, coordInfo\n            );\n            var percentPoint = (\n                directionInfo.signal > 0\n                    ? (directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel)\n                    : (directionInfo.pixel - directionInfo.pixelStart)\n                ) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n\n            scale = Math.max(1 / scale, 0);\n            range[0] = (range[0] - percentPoint) * scale + percentPoint;\n            range[1] = (range[1] - percentPoint) * scale + percentPoint;\n\n            // Restrict range.\n            var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n            sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n\n            return (this._range = range);\n        }\n\n    });\n\n    var getDirectionInfo = {\n\n        grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.dim === 'x') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // axis.dim === 'y'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var polar = coordInfo.model.coordinateSystem;\n            var radiusExtent = polar.getRadiusAxis().getExtent();\n            var angleExtent = polar.getAngleAxis().getExtent();\n\n            oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n            newPoint = polar.pointToCoord(newPoint);\n\n            if (axisModel.mainType === 'radiusAxis') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n                // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n                ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n                ret.pixelStart = radiusExtent[0];\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'angleAxis'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n                // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n                ret.pixelLength = angleExtent[1] - angleExtent[0];\n                ret.pixelStart = angleExtent[0];\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            var ret = {};\n\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.orient === 'horizontal') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'vertical'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        }\n    };\n\n    module.exports = InsideZoomView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/InsideZoomView.js\n// module id = 1746\n// module chunks = 1","/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = require('./DataZoomModel');\n\n    var SliderZoomModel = DataZoomModel.extend({\n\n        type: 'dataZoom.slider',\n\n        layoutMode: 'box',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            show: true,\n\n            // ph => placeholder. Using placehoder here because\n            // deault value can only be drived in view stage.\n            right: 'ph',  // Default align to grid rect.\n            top: 'ph',    // Default align to grid rect.\n            width: 'ph',  // Default align to grid rect.\n            height: 'ph', // Default align to grid rect.\n            left: null,   // Default align to grid rect.\n            bottom: null, // Default align to grid rect.\n\n            backgroundColor: 'rgba(47,69,84,0)',    // Background of slider zoom component.\n            // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n                                                    // highest priority, remain for compatibility of\n                                                    // previous version, but not recommended any more.\n            dataBackground: {\n                lineStyle: {\n                    color: '#2f4554',\n                    width: 0.5,\n                    opacity: 0.3\n                },\n                areaStyle: {\n                    color: 'rgba(47,69,84,0.3)',\n                    opacity: 0.3\n                }\n            },\n            borderColor: '#ddd',                    // border color of the box. For compatibility,\n                                                    // if dataBackgroundColor is set, borderColor\n                                                    // is ignored.\n\n            fillerColor: 'rgba(167,183,204,0.4)',     // Color of selected area.\n            // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n            // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n            handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n            // Percent of the slider height\n            handleSize: '100%',\n\n            handleStyle: {\n                color: '#a7b7cc'\n            },\n\n            labelPrecision: null,\n            labelFormatter: null,\n            showDetail: true,\n            showDataShadow: 'auto',                 // Default auto decision.\n            realtime: true,\n            zoomLock: false,                        // Whether disable zoom.\n            textStyle: {\n                color: '#333'\n            }\n        }\n\n    });\n\n    module.exports = SliderZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SliderZoomModel.js\n// module id = 1747\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var throttle = require('../../util/throttle');\n    var DataZoomView = require('./DataZoomView');\n    var Rect = graphic.Rect;\n    var numberUtil = require('../../util/number');\n    var linearMap = numberUtil.linearMap;\n    var layout = require('../../util/layout');\n    var sliderMove = require('../helper/sliderMove');\n    var eventTool = require('zrender/lib/core/event');\n\n    var asc = numberUtil.asc;\n    var bind = zrUtil.bind;\n    // var mathMax = Math.max;\n    var each = zrUtil.each;\n\n    // Constants\n    var DEFAULT_LOCATION_EDGE_GAP = 7;\n    var DEFAULT_FRAME_BORDER_WIDTH = 1;\n    var DEFAULT_FILLER_SIZE = 30;\n    var HORIZONTAL = 'horizontal';\n    var VERTICAL = 'vertical';\n    var LABEL_GAP = 5;\n    var SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\n\n    var SliderZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.slider',\n\n        init: function (ecModel, api) {\n\n            /**\n             * @private\n             * @type {Object}\n             */\n            this._displayables = {};\n\n            /**\n             * @private\n             * @type {string}\n             */\n            this._orient;\n\n            /**\n             * [0, 100]\n             * @private\n             */\n            this._range;\n\n            /**\n             * [coord of the first handle, coord of the second handle]\n             * @private\n             */\n            this._handleEnds;\n\n            /**\n             * [length, thick]\n             * @private\n             * @type {Array.<number>}\n             */\n            this._size;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleWidth;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleHeight;\n\n            /**\n             * @private\n             */\n            this._location;\n\n            /**\n             * @private\n             */\n            this._dragging;\n\n            /**\n             * @private\n             */\n            this._dataShadowInfo;\n\n            this.api = api;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            SliderZoomView.superApply(this, 'render', arguments);\n\n            throttle.createOrUpdate(\n                this,\n                '_dispatchZoomAction',\n                this.dataZoomModel.get('throttle'),\n                'fixRate'\n            );\n\n            this._orient = dataZoomModel.get('orient');\n\n            if (this.dataZoomModel.get('show') === false) {\n                this.group.removeAll();\n                return;\n            }\n\n            // Notice: this._resetInterval() should not be executed when payload.type\n            // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n            // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n            if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n                this._buildView();\n            }\n\n            this._updateView();\n        },\n\n        /**\n         * @override\n         */\n        remove: function () {\n            SliderZoomView.superApply(this, 'remove', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            SliderZoomView.superApply(this, 'dispose', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        _buildView: function () {\n            var thisGroup = this.group;\n\n            thisGroup.removeAll();\n\n            this._resetLocation();\n            this._resetInterval();\n\n            var barGroup = this._displayables.barGroup = new graphic.Group();\n\n            this._renderBackground();\n\n            this._renderHandle();\n\n            this._renderDataShadow();\n\n            thisGroup.add(barGroup);\n\n            this._positionGroup();\n        },\n\n        /**\n         * @private\n         */\n        _resetLocation: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var api = this.api;\n\n            // If some of x/y/width/height are not specified,\n            // auto-adapt according to target grid.\n            var coordRect = this._findCoordRect();\n            var ecSize = {width: api.getWidth(), height: api.getHeight()};\n            // Default align by coordinate system rect.\n            var positionInfo = this._orient === HORIZONTAL\n                ? {\n                    // Why using 'right', because right should be used in vertical,\n                    // and it is better to be consistent for dealing with position param merge.\n                    right: ecSize.width - coordRect.x - coordRect.width,\n                    top: (ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP),\n                    width: coordRect.width,\n                    height: DEFAULT_FILLER_SIZE\n                }\n                : { // vertical\n                    right: DEFAULT_LOCATION_EDGE_GAP,\n                    top: coordRect.y,\n                    width: DEFAULT_FILLER_SIZE,\n                    height: coordRect.height\n                };\n\n            // Do not write back to option and replace value 'ph', because\n            // the 'ph' value should be recalculated when resize.\n            var layoutParams = layout.getLayoutParams(dataZoomModel.option);\n\n            // Replace the placeholder value.\n            zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n                if (layoutParams[name] === 'ph') {\n                    layoutParams[name] = positionInfo[name];\n                }\n            });\n\n            var layoutRect = layout.getLayoutRect(\n                layoutParams,\n                ecSize,\n                dataZoomModel.padding\n            );\n\n            this._location = {x: layoutRect.x, y: layoutRect.y};\n            this._size = [layoutRect.width, layoutRect.height];\n            this._orient === VERTICAL && this._size.reverse();\n        },\n\n        /**\n         * @private\n         */\n        _positionGroup: function () {\n            var thisGroup = this.group;\n            var location = this._location;\n            var orient = this._orient;\n\n            // Just use the first axis to determine mapping.\n            var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n            var inverse = targetAxisModel && targetAxisModel.get('inverse');\n\n            var barGroup = this._displayables.barGroup;\n            var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse;\n\n            // Transform barGroup.\n            barGroup.attr(\n                (orient === HORIZONTAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, 1] : [1, -1]}\n                : (orient === HORIZONTAL && inverse)\n                ? {scale: otherAxisInverse ? [-1, 1] : [-1, -1]}\n                : (orient === VERTICAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, -1] : [1, 1], rotation: Math.PI / 2}\n                // Dont use Math.PI, considering shadow direction.\n                : {scale: otherAxisInverse ? [-1, -1] : [-1, 1], rotation: Math.PI / 2}\n            );\n\n            // Position barGroup\n            var rect = thisGroup.getBoundingRect([barGroup]);\n            thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n        },\n\n        /**\n         * @private\n         */\n        _getViewExtent: function () {\n            return [0, this._size[0]];\n        },\n\n        _renderBackground: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var size = this._size;\n            var barGroup = this._displayables.barGroup;\n\n            barGroup.add(new Rect({\n                silent: true,\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: dataZoomModel.get('backgroundColor')\n                },\n                z2: -40\n            }));\n\n            // Click panel, over shadow, below handles.\n            barGroup.add(new Rect({\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: 'transparent'\n                },\n                z2: 0,\n                onclick: zrUtil.bind(this._onClickPanelClick, this)\n            }));\n        },\n\n        _renderDataShadow: function () {\n            var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n            if (!info) {\n                return;\n            }\n\n            var size = this._size;\n            var seriesModel = info.series;\n            var data = seriesModel.getRawData();\n            var otherDim = seriesModel.getShadowDim\n                ? seriesModel.getShadowDim() // @see candlestick\n                : info.otherDim;\n\n            if (otherDim == null) {\n                return;\n            }\n\n            var otherDataExtent = data.getDataExtent(otherDim);\n            // Nice extent.\n            var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n            otherDataExtent = [\n                otherDataExtent[0] - otherOffset,\n                otherDataExtent[1] + otherOffset\n            ];\n            var otherShadowExtent = [0, size[1]];\n\n            var thisShadowExtent = [0, size[0]];\n\n            var areaPoints = [[size[0], 0], [0, 0]];\n            var linePoints = [];\n            var step = thisShadowExtent[1] / (data.count() - 1);\n            var thisCoord = 0;\n\n            // Optimize for large data shadow\n            var stride = Math.round(data.count() / size[0]);\n            var lastIsEmpty;\n            data.each([otherDim], function (value, index) {\n                if (stride > 0 && (index % stride)) {\n                    thisCoord += step;\n                    return;\n                }\n\n                // FIXME\n                // Should consider axis.min/axis.max when drawing dataShadow.\n\n                // FIXME\n                // 应该使用统一的空判断？还是在list里进行空判断？\n                var isEmpty = value == null || isNaN(value) || value === '';\n                // See #4235.\n                var otherCoord = isEmpty\n                    ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true);\n\n                // Attempt to draw data shadow precisely when there are empty value.\n                if (isEmpty && !lastIsEmpty && index) {\n                    areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n                    linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n                }\n                else if (!isEmpty && lastIsEmpty) {\n                    areaPoints.push([thisCoord, 0]);\n                    linePoints.push([thisCoord, 0]);\n                }\n\n                areaPoints.push([thisCoord, otherCoord]);\n                linePoints.push([thisCoord, otherCoord]);\n\n                thisCoord += step;\n                lastIsEmpty = isEmpty;\n            });\n\n            var dataZoomModel = this.dataZoomModel;\n            // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n            this._displayables.barGroup.add(new graphic.Polygon({\n                shape: {points: areaPoints},\n                style: zrUtil.defaults(\n                    {fill: dataZoomModel.get('dataBackgroundColor')},\n                    dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()\n                ),\n                silent: true,\n                z2: -20\n            }));\n            this._displayables.barGroup.add(new graphic.Polyline({\n                shape: {points: linePoints},\n                style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n                silent: true,\n                z2: -19\n            }));\n        },\n\n        _prepareDataShadowInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var showDataShadow = dataZoomModel.get('showDataShadow');\n\n            if (showDataShadow === false) {\n                return;\n            }\n\n            // Find a representative series.\n            var result;\n            var ecModel = this.ecModel;\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var seriesModels = dataZoomModel\n                    .getAxisProxy(dimNames.name, axisIndex)\n                    .getTargetSeriesModels();\n\n                zrUtil.each(seriesModels, function (seriesModel) {\n                    if (result) {\n                        return;\n                    }\n\n                    if (showDataShadow !== true && zrUtil.indexOf(\n                            SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')\n                        ) < 0\n                    ) {\n                        return;\n                    }\n\n                    var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n                    var otherDim = getOtherDim(dimNames.name);\n                    var otherAxisInverse;\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (otherDim != null && coordSys.getOtherAxis) {\n                        otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n                    }\n\n                    result = {\n                        thisAxis: thisAxis,\n                        series: seriesModel,\n                        thisDim: dimNames.name,\n                        otherDim: otherDim,\n                        otherAxisInverse: otherAxisInverse\n                    };\n\n                }, this);\n\n            }, this);\n\n            return result;\n        },\n\n        _renderHandle: function () {\n            var displaybles = this._displayables;\n            var handles = displaybles.handles = [];\n            var handleLabels = displaybles.handleLabels = [];\n            var barGroup = this._displayables.barGroup;\n            var size = this._size;\n            var dataZoomModel = this.dataZoomModel;\n\n            barGroup.add(displaybles.filler = new Rect({\n                draggable: true,\n                cursor: getCursor(this._orient),\n                drift: bind(this._onDragMove, this, 'all'),\n                onmousemove: function (e) {\n                    // Fot mobile devicem, prevent screen slider on the button.\n                    eventTool.stop(e.event);\n                },\n                ondragstart: bind(this._showDataInfo, this, true),\n                ondragend: bind(this._onDragEnd, this),\n                onmouseover: bind(this._showDataInfo, this, true),\n                onmouseout: bind(this._showDataInfo, this, false),\n                style: {\n                    fill: dataZoomModel.get('fillerColor'),\n                    textPosition : 'inside'\n                }\n            }));\n\n            // Frame border.\n            barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n                silent: true,\n                shape: {\n                    x: 0,\n                    y: 0,\n                    width: size[0],\n                    height: size[1]\n                },\n                style: {\n                    stroke: dataZoomModel.get('dataBackgroundColor')\n                        || dataZoomModel.get('borderColor'),\n                    lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n                    fill: 'rgba(0,0,0,0)'\n                }\n            })));\n\n            each([0, 1], function (handleIndex) {\n                var path = graphic.createIcon(\n                    dataZoomModel.get('handleIcon'),\n                    {\n                        cursor: getCursor(this._orient),\n                        draggable: true,\n                        drift: bind(this._onDragMove, this, handleIndex),\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        ondragend: bind(this._onDragEnd, this),\n                        onmouseover: bind(this._showDataInfo, this, true),\n                        onmouseout: bind(this._showDataInfo, this, false)\n                    },\n                    {x: -1, y: 0, width: 2, height: 2}\n                );\n\n                var bRect = path.getBoundingRect();\n                this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n                this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n\n                path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n                var handleColor = dataZoomModel.get('handleColor');\n                // Compatitable with previous version\n                if (handleColor != null) {\n                    path.style.fill = handleColor;\n                }\n\n                barGroup.add(handles[handleIndex] = path);\n\n                var textStyleModel = dataZoomModel.textStyleModel;\n\n                this.group.add(\n                    handleLabels[handleIndex] = new graphic.Text({\n                    silent: true,\n                    invisible: true,\n                    style: {\n                        x: 0, y: 0, text: '',\n                        textVerticalAlign: 'middle',\n                        textAlign: 'center',\n                        textFill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont()\n                    },\n                    z2: 10\n                }));\n\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetInterval: function () {\n            var range = this._range = this.dataZoomModel.getPercentRange();\n            var viewExtent = this._getViewExtent();\n\n            this._handleEnds = [\n                linearMap(range[0], [0, 100], viewExtent, true),\n                linearMap(range[1], [0, 100], viewExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         * @param {(number|string)} handleIndex 0 or 1 or 'all'\n         * @param {number} delta\n         */\n        _updateInterval: function (handleIndex, delta) {\n            var dataZoomModel = this.dataZoomModel;\n            var handleEnds = this._handleEnds;\n            var viewExtend = this._getViewExtent();\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n            var percentExtent = [0, 100];\n\n            sliderMove(\n                delta,\n                handleEnds,\n                viewExtend,\n                dataZoomModel.get('zoomLock') ? 'all' : handleIndex,\n                minMaxSpan.minSpan != null\n                    ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null,\n                minMaxSpan.maxSpan != null\n                    ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null\n            );\n\n            this._range = asc([\n                linearMap(handleEnds[0], viewExtend, percentExtent, true),\n                linearMap(handleEnds[1], viewExtend, percentExtent, true)\n            ]);\n        },\n\n        /**\n         * @private\n         */\n        _updateView: function (nonRealtime) {\n            var displaybles = this._displayables;\n            var handleEnds = this._handleEnds;\n            var handleInterval = asc(handleEnds.slice());\n            var size = this._size;\n\n            each([0, 1], function (handleIndex) {\n                // Handles\n                var handle = displaybles.handles[handleIndex];\n                var handleHeight = this._handleHeight;\n                handle.attr({\n                    scale: [handleHeight / 2, handleHeight / 2],\n                    position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n                });\n            }, this);\n\n            // Filler\n            displaybles.filler.setShape({\n                x: handleInterval[0],\n                y: 0,\n                width: handleInterval[1] - handleInterval[0],\n                height: size[1]\n            });\n\n            this._updateDataInfo(nonRealtime);\n        },\n\n        /**\n         * @private\n         */\n        _updateDataInfo: function (nonRealtime) {\n            var dataZoomModel = this.dataZoomModel;\n            var displaybles = this._displayables;\n            var handleLabels = displaybles.handleLabels;\n            var orient = this._orient;\n            var labelTexts = ['', ''];\n\n            // FIXME\n            // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n            if (dataZoomModel.get('showDetail')) {\n                var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n                if (axisProxy) {\n                    var axis = axisProxy.getAxisModel().axis;\n                    var range = this._range;\n\n                    var dataInterval = nonRealtime\n                        // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n                        ? axisProxy.calculateDataWindow({\n                            start: range[0], end: range[1]\n                        }).valueWindow\n                        : axisProxy.getDataValueWindow();\n\n                    labelTexts = [\n                        this._formatLabel(dataInterval[0], axis),\n                        this._formatLabel(dataInterval[1], axis)\n                    ];\n                }\n            }\n\n            var orderedHandleEnds = asc(this._handleEnds.slice());\n\n            setLabel.call(this, 0);\n            setLabel.call(this, 1);\n\n            function setLabel(handleIndex) {\n                // Label\n                // Text should not transform by barGroup.\n                // Ignore handlers transform\n                var barTransform = graphic.getTransform(\n                    displaybles.handles[handleIndex].parent, this.group\n                );\n                var direction = graphic.transformDirection(\n                    handleIndex === 0 ? 'right' : 'left', barTransform\n                );\n                var offset = this._handleWidth / 2 + LABEL_GAP;\n                var textPoint = graphic.applyTransform(\n                    [\n                        orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset),\n                        this._size[1] / 2\n                    ],\n                    barTransform\n                );\n                handleLabels[handleIndex].setStyle({\n                    x: textPoint[0],\n                    y: textPoint[1],\n                    textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n                    textAlign: orient === HORIZONTAL ? direction : 'center',\n                    text: labelTexts[handleIndex]\n                });\n            }\n        },\n\n        /**\n         * @private\n         */\n        _formatLabel: function (value, axis) {\n            var dataZoomModel = this.dataZoomModel;\n            var labelFormatter = dataZoomModel.get('labelFormatter');\n\n            var labelPrecision = dataZoomModel.get('labelPrecision');\n            if (labelPrecision == null || labelPrecision === 'auto') {\n                labelPrecision = axis.getPixelPrecision();\n            }\n\n            var valueStr = (value == null || isNaN(value))\n                ? ''\n                // FIXME Glue code\n                : (axis.type === 'category' || axis.type === 'time')\n                    ? axis.scale.getLabel(Math.round(value))\n                    // param of toFixed should less then 20.\n                    : value.toFixed(Math.min(labelPrecision, 20));\n\n            return zrUtil.isFunction(labelFormatter)\n                ? labelFormatter(value, valueStr)\n                : zrUtil.isString(labelFormatter)\n                ? labelFormatter.replace('{value}', valueStr)\n                : valueStr;\n        },\n\n        /**\n         * @private\n         * @param {boolean} showOrHide true: show, false: hide\n         */\n        _showDataInfo: function (showOrHide) {\n            // Always show when drgging.\n            showOrHide = this._dragging || showOrHide;\n\n            var handleLabels = this._displayables.handleLabels;\n            handleLabels[0].attr('invisible', !showOrHide);\n            handleLabels[1].attr('invisible', !showOrHide);\n        },\n\n        _onDragMove: function (handleIndex, dx, dy) {\n            this._dragging = true;\n\n            // Transform dx, dy to bar coordination.\n            var barTransform = this._displayables.barGroup.getLocalTransform();\n            var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n            this._updateInterval(handleIndex, vertex[0]);\n\n            var realtime = this.dataZoomModel.get('realtime');\n\n            this._updateView(!realtime);\n\n            if (realtime) {\n                realtime && this._dispatchZoomAction();\n            }\n        },\n\n        _onDragEnd: function () {\n            this._dragging = false;\n            this._showDataInfo(false);\n            this._dispatchZoomAction();\n        },\n\n        _onClickPanelClick: function (e) {\n            var size = this._size;\n            var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            if (localPoint[0] < 0 || localPoint[0] > size[0]\n                || localPoint[1] < 0 || localPoint[1] > size[1]\n            ) {\n                return;\n            }\n\n            var handleEnds = this._handleEnds;\n            var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n            this._updateInterval('all', localPoint[0] - center);\n            this._updateView();\n            this._dispatchZoomAction();\n        },\n\n        /**\n         * This action will be throttled.\n         * @private\n         */\n        _dispatchZoomAction: function () {\n            var range = this._range;\n\n            this.api.dispatchAction({\n                type: 'dataZoom',\n                from: this.uid,\n                dataZoomId: this.dataZoomModel.id,\n                start: range[0],\n                end: range[1]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _findCoordRect: function () {\n            // Find the grid coresponding to the first axis referred by dataZoom.\n            var rect;\n            each(this.getTargetCoordInfo(), function (coordInfoList) {\n                if (!rect && coordInfoList.length) {\n                    var coordSys = coordInfoList[0].model.coordinateSystem;\n                    rect = coordSys.getRect && coordSys.getRect();\n                }\n            });\n            if (!rect) {\n                var width = this.api.getWidth();\n                var height = this.api.getHeight();\n                rect = {\n                    x: width * 0.2,\n                    y: height * 0.2,\n                    width: width * 0.6,\n                    height: height * 0.6\n                };\n            }\n\n            return rect;\n        }\n\n    });\n\n    function getOtherDim(thisDim) {\n        // FIXME\n        // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n        var map = {x: 'y', y: 'x', radius: 'angle', angle: 'radius'};\n        return map[thisDim];\n    }\n\n    function getCursor(orient) {\n        return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n    }\n\n    module.exports = SliderZoomView;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SliderZoomView.js\n// module id = 1748\n// module chunks = 1","/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var helper = require('./helper');\n    var echarts = require('../../echarts');\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 1749\n// module chunks = 1","/**\n * @file Data zoom processor\n */\n\n\n    var echarts = require('../../echarts');\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 1750\n// module chunks = 1","/**\n * @file Roam controller manager.\n */\n\n\n    // Only create one roam controller for each coordinate system.\n    // one roam controller might be refered by two inside data zoom\n    // components (for example, one for x and one for y). When user\n    // pan or zoom, only dispatch one action for those data zoom\n    // components.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var RoamController = require('../../component/helper/RoamController');\n    var throttle = require('../../util/throttle');\n    var curry = zrUtil.curry;\n\n    var ATTR = '\\0_ec_dataZoom_roams';\n\n    var roams = {\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} dataZoomInfo\n         * @param {string} dataZoomInfo.coordId\n         * @param {Function} dataZoomInfo.containsPoint\n         * @param {Array.<string>} dataZoomInfo.allCoordIds\n         * @param {string} dataZoomInfo.dataZoomId\n         * @param {number} dataZoomInfo.throttleRate\n         * @param {Function} dataZoomInfo.panGetRange\n         * @param {Function} dataZoomInfo.zoomGetRange\n         * @param {boolean} [dataZoomInfo.zoomLock]\n         * @param {boolean} [dataZoomInfo.disabled]\n         */\n        register: function (api, dataZoomInfo) {\n            var store = giveStore(api);\n            var theDataZoomId = dataZoomInfo.dataZoomId;\n            var theCoordId = dataZoomInfo.coordId;\n\n            // Do clean when a dataZoom changes its target coordnate system.\n            // Avoid memory leak, dispose all not-used-registered.\n            zrUtil.each(store, function (record, coordId) {\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[theDataZoomId]\n                    && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0\n                ) {\n                    delete dataZoomInfos[theDataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n\n            var record = store[theCoordId];\n            // Create if needed.\n            if (!record) {\n                record = store[theCoordId] = {\n                    coordId: theCoordId,\n                    dataZoomInfos: {},\n                    count: 0\n                };\n                record.controller = createController(api, record);\n                record.dispatchAction = zrUtil.curry(dispatchAction, api);\n            }\n\n            // Update reference of dataZoom.\n            !(record.dataZoomInfos[theDataZoomId]) && record.count++;\n            record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n\n            var controllerParams = mergeControllerParams(record.dataZoomInfos);\n            record.controller.enable(controllerParams.controlType, controllerParams.opt);\n\n            // Consider resize, area should be always updated.\n            record.controller.setPointerChecker(dataZoomInfo.containsPoint);\n\n            // Update throttle.\n            throttle.createOrUpdate(\n                record,\n                'dispatchAction',\n                dataZoomInfo.throttleRate,\n                'fixRate'\n            );\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {string} dataZoomId\n         */\n        unregister: function (api, dataZoomId) {\n            var store = giveStore(api);\n\n            zrUtil.each(store, function (record) {\n                record.controller.dispose();\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[dataZoomId]) {\n                    delete dataZoomInfos[dataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n        },\n\n        /**\n         * @public\n         */\n        shouldRecordRange: function (payload, dataZoomId) {\n            if (payload && payload.type === 'dataZoom' && payload.batch) {\n                for (var i = 0, len = payload.batch.length; i < len; i++) {\n                    if (payload.batch[i].dataZoomId === dataZoomId) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        /**\n         * @public\n         */\n        generateCoordId: function (coordModel) {\n            return coordModel.type + '\\0_' + coordModel.id;\n        }\n    };\n\n    /**\n     * Key: coordId, value: {dataZoomInfos: [], count, controller}\n     * @type {Array.<Object>}\n     */\n    function giveStore(api) {\n        // Mount store on zrender instance, so that we do not\n        // need to worry about dispose.\n        var zr = api.getZr();\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    function createController(api, newRecord) {\n        var controller = new RoamController(api.getZr());\n        controller.on('pan', curry(onPan, newRecord));\n        controller.on('zoom', curry(onZoom, newRecord));\n\n        return controller;\n    }\n\n    function cleanStore(store) {\n        zrUtil.each(store, function (record, coordId) {\n            if (!record.count) {\n                record.controller.dispose();\n                delete store[coordId];\n            }\n        });\n    }\n\n    function onPan(record, dx, dy, oldX, oldY, newX, newY) {\n        wrapAndDispatch(record, function (info) {\n            return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n        });\n    }\n\n    function onZoom(record, scale, mouseX, mouseY) {\n        wrapAndDispatch(record, function (info) {\n            return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n        });\n    }\n\n    function wrapAndDispatch(record, getRange) {\n        var batch = [];\n\n        zrUtil.each(record.dataZoomInfos, function (info) {\n            var range = getRange(info);\n            !info.disabled && range && batch.push({\n                dataZoomId: info.dataZoomId,\n                start: range[0],\n                end: range[1]\n            });\n        });\n\n        record.dispatchAction(batch);\n    }\n\n    /**\n     * This action will be throttled.\n     */\n    function dispatchAction(api, batch) {\n        api.dispatchAction({\n            type: 'dataZoom',\n            batch: batch\n        });\n    }\n\n    /**\n     * Merge roamController settings when multiple dataZooms share one roamController.\n     */\n    function mergeControllerParams(dataZoomInfos) {\n        var controlType;\n        var opt = {};\n        var typePriority = {\n            'true': 2,\n            'move': 1,\n            'false': 0,\n            'undefined': -1\n        };\n        zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n            var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n            typePriority[oneType] > typePriority[controlType] && (controlType = oneType);\n            // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n            zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n        });\n\n        return {\n            controlType: controlType,\n            opt: opt\n        };\n    }\n\n    module.exports = roams;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/roams.js\n// module id = 1751\n// module chunks = 1","\n\n    require('../../model/Component').registerSubTypeDefaulter('dataZoom', function () {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 1752\n// module chunks = 1","/**\n * @module echarts/component/helper/RoamController\n */\n\n\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var zrUtil = require('zrender/lib/core/util');\n    var eventTool = require('zrender/lib/core/event');\n    var interactionMutex = require('./interactionMutex');\n\n    /**\n     * @alias module:echarts/component/helper/RoamController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function RoamController(zr) {\n\n        /**\n         * @type {Function}\n         */\n        this.pointerChecker;\n\n        /**\n         * @type {module:zrender}\n         */\n        this._zr = zr;\n\n        /**\n         * @type {Object}\n         */\n        this._opt = {};\n\n        // Avoid two roamController bind the same handler\n        var bind = zrUtil.bind;\n        var mousedownHandler = bind(mousedown, this);\n        var mousemoveHandler = bind(mousemove, this);\n        var mouseupHandler = bind(mouseup, this);\n        var mousewheelHandler = bind(mousewheel, this);\n        var pinchHandler = bind(pinch, this);\n\n        Eventful.call(this);\n\n        /**\n         * @param {Function} pointerChecker\n         *                   input: x, y\n         *                   output: boolean\n         */\n        this.setPointerChecker = function (pointerChecker) {\n            this.pointerChecker = pointerChecker;\n        };\n\n        /**\n         * Notice: only enable needed types. For example, if 'zoom'\n         * is not needed, 'zoom' should not be enabled, otherwise\n         * default mousewheel behaviour (scroll page) will be disabled.\n         *\n         * @param  {boolean|string} [controlType=true] Specify the control type,\n         *                          which can be null/undefined or true/false\n         *                          or 'pan/move' or 'zoom'/'scale'\n         * @param {Object} [opt]\n         * @param {Object} [opt.zoomOnMouseWheel=true]\n         * @param {Object} [opt.moveOnMouseMove=true]\n         * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n         */\n        this.enable = function (controlType, opt) {\n\n            // Disable previous first\n            this.disable();\n\n            this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n                zoomOnMouseWheel: true,\n                moveOnMouseMove: true,\n                preventDefaultMouseMove: true\n            });\n\n            if (controlType == null) {\n                controlType = true;\n            }\n\n            if (controlType === true || (controlType === 'move' || controlType === 'pan')) {\n                zr.on('mousedown', mousedownHandler);\n                zr.on('mousemove', mousemoveHandler);\n                zr.on('mouseup', mouseupHandler);\n            }\n            if (controlType === true || (controlType === 'scale' || controlType === 'zoom')) {\n                zr.on('mousewheel', mousewheelHandler);\n                zr.on('pinch', pinchHandler);\n            }\n        };\n\n        this.disable = function () {\n            zr.off('mousedown', mousedownHandler);\n            zr.off('mousemove', mousemoveHandler);\n            zr.off('mouseup', mouseupHandler);\n            zr.off('mousewheel', mousewheelHandler);\n            zr.off('pinch', pinchHandler);\n        };\n\n        this.dispose = this.disable;\n\n        this.isDragging = function () {\n            return this._dragging;\n        };\n\n        this.isPinching = function () {\n            return this._pinching;\n        };\n    }\n\n    zrUtil.mixin(RoamController, Eventful);\n\n\n    function mousedown(e) {\n        if (eventTool.notLeftMouse(e)\n            || (e.target && e.target.draggable)\n        ) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        // Only check on mosedown, but not mousemove.\n        // Mouse can be out of target when mouse moving.\n        if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n            this._x = x;\n            this._y = y;\n            this._dragging = true;\n        }\n    }\n\n    function mousemove(e) {\n        if (eventTool.notLeftMouse(e)\n            || !checkKeyBinding(this, 'moveOnMouseMove', e)\n            || !this._dragging\n            || e.gestureEvent === 'pinch'\n            || interactionMutex.isTaken(this._zr, 'globalPan')\n        ) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        var oldX = this._x;\n        var oldY = this._y;\n\n        var dx = x - oldX;\n        var dy = y - oldY;\n\n        this._x = x;\n        this._y = y;\n\n        this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n\n        this.trigger('pan', dx, dy, oldX, oldY, x, y);\n    }\n\n    function mouseup(e) {\n        if (!eventTool.notLeftMouse(e)) {\n            this._dragging = false;\n        }\n    }\n\n    function mousewheel(e) {\n        // wheelDelta maybe -0 in chrome mac.\n        if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n            return;\n        }\n\n        // Convenience:\n        // Mac and VM Windows on Mac: scroll up: zoom out.\n        // Windows: scroll up: zoom in.\n        var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n    }\n\n    function pinch(e) {\n        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n            return;\n        }\n        var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n    }\n\n    function zoom(e, zoomDelta, zoomX, zoomY) {\n        if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n            // When mouse is out of roamController rect,\n            // default befavoius should not be be disabled, otherwise\n            // page sliding is disabled, contrary to expectation.\n            eventTool.stop(e.event);\n\n            this.trigger('zoom', zoomDelta, zoomX, zoomY);\n        }\n    }\n\n    function checkKeyBinding(roamController, prop, e) {\n        var setting = roamController._opt[prop];\n        return setting\n            && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n    }\n\n    module.exports = RoamController;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/RoamController.js\n// module id = 1753\n// module chunks = 1","\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    require('../../echarts').registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/interactionMutex.js\n// module id = 1754\n// module chunks = 1","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 1755\n// module chunks = 1","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/selectableMixin.js\n// module id = 1756\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 1757\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n    var layoutUtil = require('../../util/layout');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 1758\n// module chunks = 1","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 1759\n// module chunks = 1","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 1760\n// module chunks = 1","\n\n    require('../coord/radar/Radar');\n    require('../coord/radar/RadarModel');\n\n    require('./radar/RadarView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/radar.js\n// module id = 1761\n// module chunks = 1","\n\n    var AxisBuilder = require('../axis/AxisBuilder');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisTickLabel', 'axisName'\n    ];\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'radar',\n\n        render: function (radarModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            this._buildAxes(radarModel);\n            this._buildSplitLineAndArea(radarModel);\n        },\n\n        _buildAxes: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n                var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n                    position: [radar.cx, radar.cy],\n                    rotation: indicatorAxis.angle,\n                    labelDirection: -1,\n                    tickDirection: -1,\n                    nameDirection: 1\n                });\n                return axisBuilder;\n            });\n\n            zrUtil.each(axisBuilders, function (axisBuilder) {\n                zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n                this.group.add(axisBuilder.getGroup());\n            }, this);\n        },\n\n        _buildSplitLineAndArea: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            if (!indicatorAxes.length) {\n                return;\n            }\n            var shape = radarModel.get('shape');\n            var splitLineModel = radarModel.getModel('splitLine');\n            var splitAreaModel = radarModel.getModel('splitArea');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n\n            var showSplitLine = splitLineModel.get('show');\n            var showSplitArea = splitAreaModel.get('show');\n            var splitLineColors = lineStyleModel.get('color');\n            var splitAreaColors = areaStyleModel.get('color');\n\n            splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n            splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n\n            var splitLines = [];\n            var splitAreas = [];\n\n            function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n                var colorIndex = idx % areaOrLineColorList.length;\n                areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n                return colorIndex;\n            }\n\n            if (shape === 'circle') {\n                var ticksRadius = indicatorAxes[0].getTicksCoords();\n                var cx = radar.cx;\n                var cy = radar.cy;\n                for (var i = 0; i < ticksRadius.length; i++) {\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Circle({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r: ticksRadius[i]\n                            }\n                        }));\n                    }\n                    if (showSplitArea && i < ticksRadius.length - 1) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n                        splitAreas[colorIndex].push(new graphic.Ring({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r0: ticksRadius[i],\n                                r: ticksRadius[i + 1]\n                            }\n                        }));\n                    }\n                }\n            }\n            // Polyyon\n            else {\n                var realSplitNumber;\n                var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n                    var ticksCoords = indicatorAxis.getTicksCoords();\n                    realSplitNumber = realSplitNumber == null\n                        ? ticksCoords.length - 1\n                        : Math.min(ticksCoords.length - 1, realSplitNumber);\n                    return zrUtil.map(ticksCoords, function (tickCoord) {\n                        return radar.coordToPoint(tickCoord, idx);\n                    });\n                });\n\n                var prevPoints = [];\n                for (var i = 0; i <= realSplitNumber; i++) {\n                    var points = [];\n                    for (var j = 0; j < indicatorAxes.length; j++) {\n                        points.push(axesTicksPoints[j][i]);\n                    }\n                    // Close\n                    if (points[0]) {\n                        points.push(points[0].slice());\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.error('Can\\'t draw value axis ' + i);\n                        }\n                    }\n\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Polyline({\n                            shape: {\n                                points: points\n                            }\n                        }));\n                    }\n                    if (showSplitArea && prevPoints) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n                        splitAreas[colorIndex].push(new graphic.Polygon({\n                            shape: {\n                                points: points.concat(prevPoints)\n                            }\n                        }));\n                    }\n                    prevPoints = points.slice().reverse();\n                }\n            }\n\n            var lineStyle = lineStyleModel.getLineStyle();\n            var areaStyle = areaStyleModel.getAreaStyle();\n            // Add splitArea before splitLine\n            zrUtil.each(splitAreas, function (splitAreas, idx) {\n                this.group.add(graphic.mergePath(\n                    splitAreas, {\n                        style: zrUtil.defaults({\n                            stroke: 'none',\n                            fill: splitAreaColors[idx % splitAreaColors.length]\n                        }, areaStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n            zrUtil.each(splitLines, function (splitLines, idx) {\n                this.group.add(graphic.mergePath(\n                    splitLines, {\n                        style: zrUtil.defaults({\n                            fill: 'none',\n                            stroke: splitLineColors[idx % splitLineColors.length]\n                        }, lineStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/radar/RadarView.js\n// module id = 1762\n// module chunks = 1","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1763\n// module chunks = 1","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1764\n// module chunks = 1","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1765\n// module chunks = 1","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 1766\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 1767\n// module chunks = 1","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 1768\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 1769\n// module chunks = 1","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 1770\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    function IndicatorAxis(dim, scale, radiusExtent) {\n        Axis.call(this, dim, scale, radiusExtent);\n\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = 'value';\n\n        this.angle = 0;\n\n        /**\n         * Indicator name\n         * @type {string}\n         */\n        this.name = '';\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.model;\n    }\n\n    zrUtil.inherits(IndicatorAxis, Axis);\n\n    module.exports = IndicatorAxis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/radar/IndicatorAxis.js\n// module id = 1771\n// module chunks = 1","// TODO clockwise\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var IndicatorAxis = require('./IndicatorAxis');\n    var IntervalScale = require('../../scale/Interval');\n    var numberUtil = require('../../util/number');\n    var axisHelper = require('../axisHelper');\n\n    function Radar(radarModel, ecModel, api) {\n\n        this._model = radarModel;\n        /**\n         * Radar dimensions\n         * @type {Array.<string>}\n         */\n        this.dimensions = [];\n\n        this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n            var dim = 'indicator_' + idx;\n            var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n            indicatorAxis.name = indicatorModel.get('name');\n            // Inject model and axis\n            indicatorAxis.model = indicatorModel;\n            indicatorModel.axis = indicatorAxis;\n            this.dimensions.push(dim);\n            return indicatorAxis;\n        }, this);\n\n        this.resize(radarModel, api);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cx;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cy;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.r;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.startAngle;\n    }\n\n    Radar.prototype.getIndicatorAxes = function () {\n        return this._indicatorAxes;\n    };\n\n    Radar.prototype.dataToPoint = function (value, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n\n        return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n    };\n\n    Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n        var angle = indicatorAxis.angle;\n        var x = this.cx + coord * Math.cos(angle);\n        var y = this.cy - coord * Math.sin(angle);\n        return [x, y];\n    };\n\n    Radar.prototype.pointToData = function (pt) {\n        var dx = pt[0] - this.cx;\n        var dy = pt[1] - this.cy;\n        var radius = Math.sqrt(dx * dx + dy * dy);\n        dx /= radius;\n        dy /= radius;\n\n        var radian = Math.atan2(-dy, dx);\n\n        // Find the closest angle\n        // FIXME index can calculated directly\n        var minRadianDiff = Infinity;\n        var closestAxis;\n        var closestAxisIdx = -1;\n        for (var i = 0; i < this._indicatorAxes.length; i++) {\n            var indicatorAxis = this._indicatorAxes[i];\n            var diff = Math.abs(radian - indicatorAxis.angle);\n            if (diff < minRadianDiff) {\n                closestAxis = indicatorAxis;\n                closestAxisIdx = i;\n                minRadianDiff = diff;\n            }\n        }\n\n        return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n    };\n\n    Radar.prototype.resize = function (radarModel, api) {\n        var center = radarModel.get('center');\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        var viewSize = Math.min(viewWidth, viewHeight) / 2;\n        this.cx = numberUtil.parsePercent(center[0], viewWidth);\n        this.cy = numberUtil.parsePercent(center[1], viewHeight);\n\n        this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n\n        this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n\n        zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n            indicatorAxis.setExtent(0, this.r);\n            var angle = (this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length);\n            // Normalize to [-PI, PI]\n            angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n            indicatorAxis.angle = angle;\n        }, this);\n    };\n\n    Radar.prototype.update = function (ecModel, api) {\n        var indicatorAxes = this._indicatorAxes;\n        var radarModel = this._model;\n        zrUtil.each(indicatorAxes, function (indicatorAxis) {\n            indicatorAxis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n            if (radarSeries.get('coordinateSystem') !== 'radar'\n                || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel\n            ) {\n                return;\n            }\n            var data = radarSeries.getData();\n            zrUtil.each(indicatorAxes, function (indicatorAxis) {\n                indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n            });\n        }, this);\n\n        var splitNumber = radarModel.get('splitNumber');\n\n        function increaseInterval(interval) {\n            var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10));\n            // Increase interval\n            var f = interval / exp10;\n            if (f === 2) {\n                f = 5;\n            }\n            else { // f is 2 or 5\n                f *= 2;\n            }\n            return f * exp10;\n        }\n        // Force all the axis fixing the maxSplitNumber.\n        zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n            var rawExtent = axisHelper.getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n            axisHelper.niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n\n            var axisModel = indicatorAxis.model;\n            var scale = indicatorAxis.scale;\n            var fixedMin = axisModel.getMin();\n            var fixedMax = axisModel.getMax();\n            var interval = scale.getInterval();\n\n            if (fixedMin != null && fixedMax != null) {\n                // User set min, max, divide to get new interval\n                scale.setExtent(+fixedMin, +fixedMax);\n                scale.setInterval(\n                    (fixedMax - fixedMin) / splitNumber\n                );\n            }\n            else if (fixedMin != null) {\n                var max;\n                // User set min, expand extent on the other side\n                do {\n                    max = fixedMin + interval * splitNumber;\n                    scale.setExtent(+fixedMin, max);\n                    // Interval must been set after extent\n                    // FIXME\n                    scale.setInterval(interval);\n\n                    interval = increaseInterval(interval);\n                } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n            }\n            else if (fixedMax != null) {\n                var min;\n                // User set min, expand extent on the other side\n                do {\n                    min = fixedMax - interval * splitNumber;\n                    scale.setExtent(min, +fixedMax);\n                    scale.setInterval(interval);\n                    interval = increaseInterval(interval);\n                } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n            }\n            else {\n                var nicedSplitNumber = scale.getTicks().length - 1;\n                if (nicedSplitNumber > splitNumber) {\n                    interval = increaseInterval(interval);\n                }\n                // PENDING\n                var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n                var halfSplitNumber = Math.round(splitNumber / 2);\n                scale.setExtent(\n                    numberUtil.round(center - halfSplitNumber * interval),\n                    numberUtil.round(center + (splitNumber - halfSplitNumber) * interval)\n                );\n                scale.setInterval(interval);\n            }\n        });\n    };\n\n    /**\n     * Radar dimensions is based on the data\n     * @type {Array}\n     */\n    Radar.dimensions = [];\n\n    Radar.create = function (ecModel, api) {\n        var radarList = [];\n        ecModel.eachComponent('radar', function (radarModel) {\n            var radar = new Radar(radarModel, ecModel, api);\n            radarList.push(radar);\n            radarModel.coordinateSystem = radar;\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries) {\n            if (radarSeries.get('coordinateSystem') === 'radar') {\n                // Inject coordinate system\n                radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n            }\n        });\n        return radarList;\n    };\n\n    require('../../CoordinateSystem').register('radar', Radar);\n    module.exports = Radar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/radar/Radar.js\n// module id = 1772\n// module chunks = 1","\n\n\n    var axisDefault = require('../axisDefault');\n    var valueAxisDefault = axisDefault.valueAxis;\n    var Model = require('../../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var axisModelCommonMixin = require('../axisModelCommonMixin');\n\n    function defaultsShow(opt, show) {\n        return zrUtil.defaults({\n            show: show\n        }, opt);\n    }\n\n    var RadarModel = require('../../echarts').extendComponentModel({\n\n        type: 'radar',\n\n        optionUpdated: function () {\n            var boundaryGap = this.get('boundaryGap');\n            var splitNumber = this.get('splitNumber');\n            var scale = this.get('scale');\n            var axisLine = this.get('axisLine');\n            var axisTick = this.get('axisTick');\n            var axisLabel = this.get('axisLabel');\n            var nameTextStyle = this.get('name');\n            var showName = this.get('name.show');\n            var nameFormatter = this.get('name.formatter');\n            var nameGap = this.get('nameGap');\n            var triggerEvent = this.get('triggerEvent');\n\n            var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n                // PENDING\n                if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n                    indicatorOpt.min = 0;\n                }\n                else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n                    indicatorOpt.max = 0;\n                }\n                var iNameTextStyle = nameTextStyle;\n                if(indicatorOpt.color != null) {\n                    iNameTextStyle = zrUtil.defaults({color: indicatorOpt.color}, nameTextStyle);\n                }\n                // Use same configuration\n                indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n                    boundaryGap: boundaryGap,\n                    splitNumber: splitNumber,\n                    scale: scale,\n                    axisLine: axisLine,\n                    axisTick: axisTick,\n                    axisLabel: axisLabel,\n                    // Competitable with 2 and use text\n                    name: indicatorOpt.text,\n                    nameLocation: 'end',\n                    nameGap: nameGap,\n                    // min: 0,\n                    nameTextStyle: iNameTextStyle,\n                    triggerEvent: triggerEvent\n                }, false);\n                if (!showName) {\n                    indicatorOpt.name = '';\n                }\n                if (typeof nameFormatter === 'string') {\n                    var indName = indicatorOpt.name;\n                    indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n                }\n                else if (typeof nameFormatter === 'function') {\n                    indicatorOpt.name = nameFormatter(\n                        indicatorOpt.name, indicatorOpt\n                    );\n                }\n                var model = zrUtil.extend(\n                    new Model(indicatorOpt, null, this.ecModel),\n                    axisModelCommonMixin\n                );\n\n                // For triggerEvent.\n                model.mainType = 'radar';\n                model.componentIndex = this.componentIndex;\n\n                return model;\n            }, this);\n\n            this.getIndicatorModels = function () {\n                return indicatorModels;\n            };\n        },\n\n        defaultOption: {\n\n            zlevel: 0,\n\n            z: 0,\n\n            center: ['50%', '50%'],\n\n            radius: '75%',\n\n            startAngle: 90,\n\n            name: {\n                show: true\n                // formatter: null\n                // textStyle: {}\n            },\n\n            boundaryGap: [0, 0],\n\n            splitNumber: 5,\n\n            nameGap: 15,\n\n            scale: false,\n\n            // Polygon or circle\n            shape: 'polygon',\n\n            axisLine: zrUtil.merge(\n                {\n                    lineStyle: {\n                        color: '#bbb'\n                    }\n                },\n                valueAxisDefault.axisLine\n            ),\n            axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n            axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n            splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n            splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n\n            // {text, min, max}\n            indicator: []\n        }\n    });\n\n    module.exports = RadarModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/radar/RadarModel.js\n// module id = 1773\n// module chunks = 1","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 1774\n// module chunks = 1","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 1775\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                // See #6312, do not restrict width.\n                stacks[stackId].width = barWidth;\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coordDims = [\n                seriesModel.coordDimToDataDim('x')[0],\n                seriesModel.coordDimToDataDim('y')[0]\n            ];\n            var coords = data.mapArray(coordDims, function (x, y) {\n                return cartesian.dataToPoint([x, y]);\n            }, true);\n\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 1776\n// module chunks = 1","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 1777\n// module chunks = 1","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 1778\n// module chunks = 1","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 1779\n// module chunks = 1","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 1780\n// module chunks = 1","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 1781\n// module chunks = 1","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 1782\n// module chunks = 1","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 1783\n// module chunks = 1","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 1784\n// module chunks = 1","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 1785\n// module chunks = 1","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 1786\n// module chunks = 1","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1787\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n        }\n\n        // mark point data\n        var markPoint = seriesOpt.markPoint;\n        if (markPoint && markPoint.data) {\n            var mpData = markPoint.data;\n            for (var i = 0; i < mpData.length; i++) {\n                compatItemStyle(mpData[i]);\n                compatLabelTextStyle(mpData[i] && mpData[i].label);\n            }\n        }\n        // mark line data\n        var markLine = seriesOpt.markLine;\n        if (markLine && markLine.data) {\n            var mlData = markLine.data;\n            for (var i = 0; i < mlData.length; i++) {\n                if (zrUtil.isArray(mlData[i])) {\n                    compatItemStyle(mlData[i][0]);\n                    compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                    compatItemStyle(mlData[i][1]);\n                    compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                }\n                else {\n                    compatItemStyle(mlData[i]);\n                    compatLabelTextStyle(mlData[i] && mlData[i].label);\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1788\n// module chunks = 1","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 1789\n// module chunks = 1","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 1790\n// module chunks = 1","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 1791\n// module chunks = 1","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : (new Date(+extent[0] || +extent[1])).getTimezoneOffset() * 60 * 1000;\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 1792\n// module chunks = 1","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 1793\n// module chunks = 1","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var vec2 = require('./core/vector');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch,\n            which: event.which\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downEl = hoveredTarget;\n                this._downPoint = [event.zrX, event.zrY];\n                // In case click triggered before mouseup\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downEl !== this._upEl\n                    // Original click event is triggered on the whole canvas element,\n                    // including the case that `mousedown` - `mousemove` - `mouseup`,\n                    // which should be filtered, otherwise it will bring trouble to\n                    // pan and zoom.\n                    || !this._downPoint\n                    // Arbitrary value\n                    || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4\n                ) {\n                    return;\n                }\n                this._downPoint = null;\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 1803\n// module chunks = 1","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 1804\n// module chunks = 1","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n\n        this.type = 'canvas';\n\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        getType: function () {\n            return 'canvas';\n        },\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 1805\n// module chunks = 1","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 1806\n// module chunks = 1","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 1807\n// module chunks = 1","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 1808\n// module chunks = 1","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 1809\n// module chunks = 1","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 1810\n// module chunks = 1","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 1811\n// module chunks = 1","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 1812\n// module chunks = 1","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 1813\n// module chunks = 1","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 1814\n// module chunks = 1","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 1815\n// module chunks = 1","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 1816\n// module chunks = 1","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 1817\n// module chunks = 1","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 1818\n// module chunks = 1","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 1819\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 1820\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 1821\n// module chunks = 1","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n    var textHelper = require('./helper/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n                    var w = style.textStrokeWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 1822\n// module chunks = 1","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1823\n// module chunks = 1","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1824\n// module chunks = 1","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = require('../helper/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 1825\n// module chunks = 1","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 1826\n// module chunks = 1","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1827\n// module chunks = 1","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 1828\n// module chunks = 1","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 1829\n// module chunks = 1","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 1830\n// module chunks = 1","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 1831\n// module chunks = 1","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 1832\n// module chunks = 1","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 1833\n// module chunks = 1","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = require('../Path');\n    var fixClipWithShadow = require('../helper/fixClipWithShadow');\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 1834\n// module chunks = 1","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 1835\n// module chunks = 1","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 1836\n// module chunks = 1","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 1837\n// module chunks = 1","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 1838\n// module chunks = 1","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.3';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 1839\n// module chunks = 1","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n    var backwardCompat = require('./preprocessor/backwardCompat');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender/lib/zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.2',\n        dependencies: {\n            zrender: '3.6.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 499\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 501\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 502\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie.js\n// module id = 503\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    // Must use radar component\n    require('../component/radar');\n\n    require('./radar/RadarSeries');\n    require('./radar/RadarView');\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'radar'));\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'radar', 'circle', null\n    ));\n    echarts.registerLayout(require('./radar/radarLayout'));\n\n    echarts.registerProcessor(\n        zrUtil.curry(require('../processor/dataFilter'), 'radar')\n    );\n\n    echarts.registerPreprocessor(require('./radar/backwardCompat'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar.js\n// module id = 504\n// module chunks = 1","/**\n * DataZoom component entry\n */\n\n\n    require('./dataZoom/typeDefaulter');\n\n    require('./dataZoom/DataZoomModel');\n    require('./dataZoom/DataZoomView');\n\n    require('./dataZoom/SliderZoomModel');\n    require('./dataZoom/SliderZoomView');\n\n    require('./dataZoom/InsideZoomModel');\n    require('./dataZoom/InsideZoomView');\n\n    require('./dataZoom/dataZoomProcessor');\n    require('./dataZoom/dataZoomAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom.js\n// module id = 505\n// module chunks = 1","\n\n    require('./gridSimple');\n\n    require('./axisPointer/CartesianAxisPointer');\n\n    require('./axisPointer');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = 506\n// module chunks = 1","\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n    require('../model/Component').registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 507\n// module chunks = 1","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: titleModel.get('text'),\n                    textFill: textStyleModel.getTextColor()\n                }, {disableBox: true}),\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: graphic.setTextStyle({}, subtextStyleModel, {\n                    text: subText,\n                    textFill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textVerticalAlign: 'top'\n                }, {disableBox: true}),\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2],\n                    r: titleModel.get('borderRadius')\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/title.js\n// module id = 508\n// module chunks = 1","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 509\n// module chunks = 1"],"sourceRoot":""}